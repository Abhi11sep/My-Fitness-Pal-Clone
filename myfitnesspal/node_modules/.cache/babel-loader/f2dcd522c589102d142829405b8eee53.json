{"ast":null,"code":"import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport React, { Children } from 'react';\nimport { Swipeable } from 'react-swipeable';\nimport cx from 'classnames';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport Only from 'react-only-when';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar noop = function noop() {};\n\nvar numberToArray = function numberToArray(n) {\n  return _toConsumableArray(Array(n).keys());\n};\n\nvar cssPrefix = function cssPrefix() {\n  var prefix = \"rec\";\n  var space = \" \";\n  var result = \"\".concat(prefix); // initial it with global prefix;\n  // in case of an array we add the class prefix per item;\n\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  var chainedClasses = classNames.reduce(function (acc, current) {\n    if (current) {\n      acc += \"\".concat(space).concat(prefix, \"-\").concat(current); // we must keep spaces between class names\n    }\n\n    return acc;\n  }, \"\");\n  result += chainedClasses;\n  return result;\n};\n\nvar pipe = function pipe() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function (x) {\n    return fns.reduce(function (v, f) {\n      return f(v);\n    }, x);\n  };\n};\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  box-sizing: border-box;\\n  transition: all 0.3s ease;\\n  font-size: 1.6em;\\n  background-color: rgba(103, 58, 183, 0.1);\\n  color: \", \";\\n  box-shadow: 0 0 2px 0px #333;\\n  border-radius: 50%;\\n  border: none;\\n  padding: 0;\\n  width: 50px;\\n  height: 50px;\\n  min-width: 50px;\\n  line-height: 50px;\\n  align-self: center;\\n  cursor: pointer;\\n  outline: none;\\n  &:hover:enabled,\\n  &:focus:enabled {\\n    color: #fff;\\n    background-color: rgba(103, 58, 183, 1);\\n    box-shadow: 0 0 2px 0 #333;\\n  }\\n  &:disabled {\\n    cursor: not-allowed;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Button = styled.button.attrs(function (_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"button\" : _ref$type;\n  return {\n    type: type\n  };\n})(_templateObject(), function (props) {\n  return props.disabled ? \"#999\" : \"#333\";\n});\nvar consts = {\n  PREV: \"PREV\",\n  NEXT: \"NEXT\",\n  START: \"flex-start\",\n  CENTER: \"center\",\n  END: \"flex-end\"\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteral([\"\\n  box-sizing: border-box;\\n  display: flex;\\n  overflow: hidden;\\n  user-select: none;\\n  justify-content: \", \";\\n\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar ItemWrapper = styled.div.attrs(function (_ref) {\n  var style = _ref.style;\n  return {\n    style: style,\n    className: cssPrefix(\"item-wrapper\")\n  };\n})(_templateObject$1(), function (_ref2) {\n  var itemPosition = _ref2.itemPosition;\n  return itemPosition;\n});\nItemWrapper.defaultProps = {\n  style: {},\n  itemPosition: consts.CENTER\n};\nItemWrapper.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.object,\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END])\n};\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteral([\"\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  margin: 0 10px;\\n\"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar SliderContainer = styled.div(_templateObject$2());\n\nfunction _templateObject$3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  display: flex;\\n  flex-direction: \", \";\\n  \", \";\\n  \", \";\\n\"]);\n\n  _templateObject$3 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar calcLeft = function calcLeft(_ref) {\n  var isRTL = _ref.isRTL,\n      verticalMode = _ref.verticalMode,\n      isSwiping = _ref.isSwiping,\n      swipedSliderPosition = _ref.swipedSliderPosition,\n      sliderPosition = _ref.sliderPosition;\n\n  if (verticalMode || isRTL) {\n    return \"auto\";\n  } else {\n    return \"\".concat(isSwiping ? swipedSliderPosition : sliderPosition, \"px\");\n  }\n};\n\nvar calcRight = function calcRight(_ref2) {\n  var isRTL = _ref2.isRTL,\n      verticalMode = _ref2.verticalMode,\n      isSwiping = _ref2.isSwiping,\n      swipedSliderPosition = _ref2.swipedSliderPosition,\n      sliderPosition = _ref2.sliderPosition;\n\n  if (!verticalMode && isRTL) {\n    return \"\".concat(isSwiping ? swipedSliderPosition : sliderPosition, \"px\");\n  } else {\n    return \"auto\";\n  }\n};\n\nvar calcTop = function calcTop(_ref3) {\n  var verticalMode = _ref3.verticalMode,\n      isSwiping = _ref3.isSwiping,\n      swipedSliderPosition = _ref3.swipedSliderPosition,\n      sliderPosition = _ref3.sliderPosition;\n\n  if (!verticalMode) {\n    return \"auto\";\n  } else {\n    return \"\".concat(isSwiping ? swipedSliderPosition : sliderPosition, \"px\");\n  }\n};\n\nvar calcTransition = function calcTransition(_ref4) {\n  var isSwiping = _ref4.isSwiping,\n      transitionMs = _ref4.transitionMs,\n      easing = _ref4.easing,\n      tiltEasing = _ref4.tiltEasing;\n  var duration = isSwiping ? 0 : transitionMs;\n  var effectiveEasing = isSwiping ? tiltEasing : easing;\n  return \"all \".concat(duration, \"ms \").concat(effectiveEasing);\n}; // We use attributes (style) to bypass multiple creation of classes (dynamic styling)\n\n\nvar Slider = styled.div.attrs(function (props) {\n  return {\n    style: {\n      transition: calcTransition(props),\n      left: calcLeft(props),\n      right: calcRight(props),\n      top: calcTop(props)\n    }\n  };\n})(_templateObject$3(), function (_ref5) {\n  var verticalMode = _ref5.verticalMode;\n  return verticalMode ? \"column\" : \"row\";\n}, function (_ref6) {\n  var verticalMode = _ref6.verticalMode;\n  return verticalMode ? \"min-height: 100%;\" : \"\";\n}, function (_ref7) {\n  var verticalMode = _ref7.verticalMode,\n      outerSpacing = _ref7.outerSpacing;\n  return verticalMode ? \"\" : \"margin: 0 \".concat(outerSpacing, \"px;\");\n});\n\nfunction _templateObject$4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  width: 100%;\\n\"]);\n\n  _templateObject$4 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar StyledCarousel = styled.div.attrs(function (props) {\n  return {\n    style: {\n      height: props.size.height\n    }\n  };\n})(_templateObject$4());\n\nfunction _templateObject$5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n  direction: \", \";\\n\"]);\n\n  _templateObject$5 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar CarouselWrapper = styled.div(_templateObject$5(), function (_ref) {\n  var isRTL = _ref.isRTL;\n  return isRTL ? \"rtl\" : \"ltr\";\n});\n\nvar ItemWrapperContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(ItemWrapperContainer, _React$Component);\n\n  var _super = _createSuper(ItemWrapperContainer);\n\n  function ItemWrapperContainer() {\n    var _this;\n\n    _classCallCheck(this, ItemWrapperContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function () {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          id = _this$props.id;\n      onClick(id);\n    });\n\n    return _this;\n  }\n\n  _createClass(ItemWrapperContainer, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ItemWrapper, _extends({}, this.props, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return ItemWrapperContainer;\n}(React.Component);\n\nItemWrapperContainer.defaultProps = {\n  onClick: noop\n};\nItemWrapperContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onClick: PropTypes.func\n};\n\nvar Track = function Track(_ref) {\n  var children = _ref.children,\n      childWidth = _ref.childWidth,\n      autoTabIndexVisibleItems = _ref.autoTabIndexVisibleItems,\n      enableSwipe = _ref.enableSwipe,\n      enableMouseSwipe = _ref.enableMouseSwipe,\n      preventDefaultTouchmoveEvent = _ref.preventDefaultTouchmoveEvent,\n      itemsToShow = _ref.itemsToShow,\n      itemsToScroll = _ref.itemsToScroll,\n      currentItem = _ref.currentItem,\n      itemPosition = _ref.itemPosition,\n      itemPadding = _ref.itemPadding,\n      onSwiped = _ref.onSwiped,\n      onSwiping = _ref.onSwiping,\n      verticalMode = _ref.verticalMode,\n      onItemClick = _ref.onItemClick;\n  var width = \"\".concat(childWidth, \"px\");\n  var paddingStyle = \"\".concat(itemPadding.join(\"px \"), \"px\");\n  var minVisibleItem = currentItem;\n  var maxVisibleItem = currentItem + itemsToShow;\n  var prevItem = minVisibleItem - itemsToScroll;\n  var nextItem = maxVisibleItem + itemsToScroll;\n  var originalChildren = React.Children.map(children, function (child, idx) {\n    var isVisible = idx >= minVisibleItem && idx < maxVisibleItem;\n    var isPrevItem = !isVisible && idx >= prevItem && idx < currentItem;\n    var isNextItem = !isVisible && idx < nextItem && idx > currentItem;\n    var itemClass = \"carousel-item\";\n    var childToRender = autoTabIndexVisibleItems ? /*#__PURE__*/React.cloneElement(child, {\n      tabIndex: isVisible ? 0 : -1\n    }) : child;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: cssPrefix(itemClass, \"\".concat(itemClass, \"-\").concat(idx), \"\".concat(itemClass, \"-\").concat(isVisible ? \"visible\" : \"hidden\"), isPrevItem && \"\".concat(itemClass, \"-prev\"), isNextItem && \"\".concat(itemClass, \"-next\"))\n    }, /*#__PURE__*/React.createElement(ItemWrapperContainer, {\n      id: idx,\n      itemPosition: itemPosition,\n      style: {\n        width: width,\n        padding: paddingStyle\n      },\n      key: idx,\n      onClick: onItemClick\n    }, childToRender));\n  });\n  var toRender = enableSwipe ? /*#__PURE__*/React.createElement(Swipeable, {\n    style: {\n      display: \"flex\",\n      flexDirection: verticalMode ? \"column\" : \"row\"\n    },\n    stopPropagation: true,\n    preventDefaultTouchmoveEvent: preventDefaultTouchmoveEvent,\n    trackMouse: enableMouseSwipe,\n    onSwiped: onSwiped,\n    onSwiping: onSwiping,\n    className: cssPrefix(\"swipable\")\n  }, originalChildren) : originalChildren;\n  return toRender;\n};\n\nTrack.propTypes = {\n  children: PropTypes.array.isRequired,\n  itemsToShow: PropTypes.number.isRequired,\n  noAutoTabbedItems: PropTypes.bool,\n  currentItem: PropTypes.number.isRequired,\n  itemPosition: PropTypes.string,\n  itemPadding: PropTypes.array,\n  childWidth: PropTypes.number,\n  verticalMode: PropTypes.bool,\n  enableSwipe: PropTypes.bool,\n  enableMouseSwipe: PropTypes.bool,\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  onSwiped: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onItemClick: PropTypes.func\n};\nvar directionIcons = {\n  left: \"❮\",\n  right: \"❯\",\n  up: \"❮\",\n  down: \"❯\"\n};\nvar arrowClassname = cssPrefix(\"arrow\");\n\nvar rotateStyle = function rotateStyle(direction) {\n  var rotate = {};\n\n  if (direction === Arrow.up || direction === Arrow.down) {\n    rotate.transform = \"rotate(90deg)\";\n  }\n\n  return rotate;\n};\n\nvar Arrow = function Arrow(_ref) {\n  var direction = _ref.direction,\n      onClick = _ref.onClick,\n      icons = _ref.icons,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, [\"direction\", \"onClick\", \"icons\", \"style\"]);\n\n  var arrows = _objectSpread2(_objectSpread2({}, directionIcons), icons);\n\n  var styleObj = _objectSpread2(_objectSpread2({}, rotateStyle(direction)), style);\n\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    tabIndex: 0,\n    onClick: onClick,\n    className: cx(arrowClassname, \"\".concat(arrowClassname, \"-\").concat(direction)),\n    style: styleObj\n  }, rest), arrows[direction]);\n};\n\nArrow.left = \"left\";\nArrow.right = \"right\";\nArrow.up = \"up\";\nArrow.down = \"down\";\nArrow.propTypes = {\n  direction: PropTypes.oneOf([\"left\", \"right\", \"up\", \"down\"]).isRequired,\n  icons: PropTypes.object,\n  style: PropTypes.object,\n  onClick: PropTypes.func\n};\nvar NEXT_ITEM = \"NEXT_ITEM\";\nvar PREV_ITEM = \"PREV_ITEM\";\n\nvar activeIndexReducer = function activeIndexReducer(state, action) {\n  var limit = action.limit,\n      itemsToScroll = action.itemsToScroll,\n      type = action.type;\n\n  switch (type) {\n    case NEXT_ITEM:\n      {\n        var optimisticNextItem = state + itemsToScroll;\n        var nextItem = limit >= optimisticNextItem ? optimisticNextItem : limit;\n        return nextItem;\n      }\n\n    case PREV_ITEM:\n      {\n        var optimisticPrevItem = state - itemsToScroll;\n        var prevItem = optimisticPrevItem >= limit ? optimisticPrevItem : limit;\n        return prevItem;\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar nextItemAction = function nextItemAction(limit, itemsToScroll) {\n  return {\n    type: NEXT_ITEM,\n    limit: limit,\n    itemsToScroll: itemsToScroll\n  };\n};\n\nvar prevItemAction = function prevItemAction(limit, itemsToScroll) {\n  return {\n    type: PREV_ITEM,\n    limit: limit,\n    itemsToScroll: itemsToScroll\n  };\n};\n\nfunction _templateObject$6() {\n  var data = _taggedTemplateLiteral([\"\\n  box-sizing: border-box;\\n  padding: 0;\\n  transition: all 250ms ease;\\n  border: none;\\n  margin: 5px;\\n  background-color: \", \";\\n  font-size: 1.3em;\\n  content: \\\"\\\";\\n  height: 10px;\\n  width: 10px;\\n  box-shadow: \", \";\\n  border-radius: 50%;\\n  outline: none;\\n  &:hover,\\n  &:focus {\\n    cursor: pointer;\\n    box-shadow: \", \";\\n  }\\n\"]);\n\n  _templateObject$6 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar boxShadow = \"0 0 1px 2px rgba(0, 0, 0, 0.5)\";\nvar activeBoxShadow = \"0 0 1px 3px rgba(103,58,183,1)\";\nvar hoveredBoxShadow = \"0 0 1px 3px rgba(103,58,183,.5)\";\nvar Dot = styled.button.attrs(function (_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"button\" : _ref$type;\n  return {\n    type: type\n  };\n})(_templateObject$6(), function (_ref2) {\n  var active = _ref2.active;\n  return active ? \"rgba(103,58,183,.5)\" : \"transparent\";\n}, function (_ref3) {\n  var active = _ref3.active;\n  return active ? activeBoxShadow : boxShadow;\n}, function (_ref4) {\n  var active = _ref4.active;\n  return active ? activeBoxShadow : hoveredBoxShadow;\n});\n\nvar DotContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(DotContainer, _React$Component);\n\n  var _super = _createSuper(DotContainer);\n\n  function DotContainer() {\n    var _this;\n\n    _classCallCheck(this, DotContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function () {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          id = _this$props.id;\n      onClick(id);\n    });\n\n    return _this;\n  }\n\n  _createClass(DotContainer, [{\n    key: \"render\",\n    value: function render() {\n      var active = this.props.active;\n      return /*#__PURE__*/React.createElement(Dot, {\n        tabIndex: active ? -1 : 0,\n        onClick: this.onClick,\n        active: active,\n        className: \"\".concat(cssPrefix(\"dot\"), \" \").concat(active ? cssPrefix(\"dot_active\") : \"\")\n      });\n    }\n  }]);\n\n  return DotContainer;\n}(React.Component);\n\nDotContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  active: PropTypes.bool,\n  onClick: PropTypes.func\n};\n\nfunction _templateObject$7() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-top: 15px;\\n\"]);\n\n  _templateObject$7 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar Indicators = styled.div(_templateObject$7());\n\nvar Pagination = /*#__PURE__*/function (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  var _super = _createSuper(Pagination);\n\n  function Pagination() {\n    _classCallCheck(this, Pagination);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Pagination, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          numOfPages = _this$props.numOfPages,\n          activePage = _this$props.activePage,\n          onClick = _this$props.onClick;\n      var pages = numberToArray(numOfPages);\n      return /*#__PURE__*/React.createElement(Indicators, {\n        className: cssPrefix(\"pagination\")\n      }, pages.map(function (item, i) {\n        return /*#__PURE__*/React.createElement(DotContainer, {\n          key: i,\n          id: i,\n          active: i === activePage,\n          onClick: onClick\n        });\n      }));\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nPagination.defaultProps = {\n  onClick: noop\n};\nPagination.propTypes = {\n  numOfPages: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onClick: PropTypes.func\n};\n\nvar Carousel = /*#__PURE__*/function (_React$Component) {\n  _inherits(Carousel, _React$Component);\n\n  var _super = _createSuper(Carousel);\n\n  function Carousel() {\n    var _this;\n\n    _classCallCheck(this, Carousel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"isComponentMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      rootHeight: 0,\n      childHeight: 0,\n      sliderPosition: 0,\n      swipedSliderPosition: 0,\n      isSwiping: false,\n      transitioning: false,\n      transitionMs: _this.props.transitionMs,\n      activeIndex: _this.props.initialActiveIndex || _this.props.initialFirstItem,\n      // support deprecated  initialFirstItem\n      pages: [],\n      activePage: 0,\n      sliderContainerWidth: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setRef\", function (name) {\n      return function (ref) {\n        return _this[name] = ref;\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initResizeObserver\", function () {\n      _this.ro = new ResizeObserver(function (entries, observer) {\n        var _iterator = _createForOfIteratorHelper(entries),\n            _step;\n\n        try {\n          var _loop = function _loop() {\n            var entry = _step.value;\n\n            if (entry.target === _this.sliderContainer) {\n              // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n              // TBH, I'm not sure i fully understand why.\n              // see https://github.com/sag1v/react-elastic-carousel/issues/107\n              window.requestAnimationFrame(function () {\n                _this.onContainerResize(entry);\n              });\n            }\n\n            if (entry.target === _this.slider) {\n              // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n              // TBH, I'm not sure i fully understand why\n              // see https://github.com/sag1v/react-elastic-carousel/issues/107\n              window.requestAnimationFrame(function () {\n                _this.onSliderResize(entry);\n              });\n            }\n          };\n\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n\n      _this.ro.observe(_this.sliderContainer);\n\n      _this.ro.observe(_this.slider);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unSubscribeObserver\", function () {\n      return _this.ro.disconnect();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setAutoPlay\", function () {\n      var _this$getDerivedProps = _this.getDerivedPropsFromBreakPoint(),\n          autoPlaySpeed = _this$getDerivedProps.autoPlaySpeed;\n\n      _this.autoPlayIntervalId = setInterval(function () {\n        if (_this.isComponentMounted) {\n          var transitioning = _this.state.transitioning;\n\n          if (!transitioning) {\n            _this.slideNext();\n          }\n        }\n      }, autoPlaySpeed);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeAutoPlay\", function () {\n      if (_this.autoPlayIntervalId) {\n        clearInterval(_this.autoPlayIntervalId);\n        _this.autoPlayIntervalId = null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setPages\", function () {\n      var numOfPages = _this.getNumOfPages();\n\n      var pages = numberToArray(numOfPages);\n\n      _this.setState({\n        pages: pages\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSliderTransitionEnd\", function (fn) {\n      _this.slider.addEventListener(\"transitionend\", fn);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeSliderTransitionHook\", function (fn) {\n      _this.slider.removeEventListener(\"transitionend\", fn);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDerivedPropsFromBreakPoint\", function () {\n      var _this$props = _this.props,\n          breakPoints = _this$props.breakPoints,\n          restOfProps = _objectWithoutProperties(_this$props, [\"breakPoints\"]);\n\n      var sliderContainerWidth = _this.state.sliderContainerWidth; // default breakpoint from individual props\n\n      var currentBreakPoint; // if breakpoints were added as props override the individual props\n\n      if (breakPoints && breakPoints.length > 0) {\n        currentBreakPoint = breakPoints.slice() // no mutations\n        .reverse() // so we can find last match\n        .find(function (bp) {\n          return bp.width <= sliderContainerWidth;\n        });\n\n        if (!currentBreakPoint) {\n          /* in case we don't have a lower width than sliderContainerWidth\n           * this mostly happens in initilization when sliderContainerWidth is 0\n           */\n          currentBreakPoint = breakPoints[0];\n        }\n      } // merge direct props with current breakpoint Props\n\n\n      return _objectSpread2(_objectSpread2({}, restOfProps), currentBreakPoint);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSliderPosition\", function () {\n      _this.setState(function (state) {\n        var _this$getDerivedProps2 = _this.getDerivedPropsFromBreakPoint(),\n            children = _this$getDerivedProps2.children,\n            verticalMode = _this$getDerivedProps2.verticalMode,\n            itemsToShow = _this$getDerivedProps2.itemsToShow,\n            transitionMs = _this$getDerivedProps2.transitionMs;\n\n        var childHeight = state.childHeight,\n            activeIndex = state.activeIndex;\n\n        var childWidth = _this.calculateChildWidth();\n\n        var totalItems = Children.toArray(children).length;\n        var hiddenSlots = totalItems - itemsToShow;\n        var moveBy = activeIndex * -1;\n        var emptySlots = itemsToShow - (totalItems - activeIndex);\n\n        if (emptySlots > 0 && hiddenSlots > 0) {\n          moveBy = emptySlots + activeIndex * -1;\n        }\n\n        var sliderPosition = (verticalMode ? childHeight : childWidth) * moveBy;\n        var newActiveIndex = emptySlots > 0 ? activeIndex - emptySlots : activeIndex; // go back from 0ms to whatever set by the user\n        // We were at 0ms because we wanted to disable animation on resize\n        // see https://github.com/sag1v/react-elastic-carousel/issues/94\n\n        window.requestAnimationFrame(function () {\n          if (_this.isComponentMounted) {\n            _this.setState({\n              transitionMs: transitionMs\n            });\n          }\n        });\n        return {\n          sliderPosition: sliderPosition,\n          activeIndex: newActiveIndex < 0 ? 0 : newActiveIndex\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSliderResize\", function (sliderNode) {\n      if (!_this.isComponentMounted) {\n        return;\n      }\n\n      var _this$getDerivedProps3 = _this.getDerivedPropsFromBreakPoint(),\n          verticalMode = _this$getDerivedProps3.verticalMode,\n          children = _this$getDerivedProps3.children,\n          itemsToShow = _this$getDerivedProps3.itemsToShow;\n\n      var sliderHeight = sliderNode.contentRect.height;\n      var nextState = {};\n      var childrenLength = Children.toArray(children).length;\n\n      if (verticalMode) {\n        var childHeight = sliderHeight / childrenLength; // We use Math.min because we don't want to make the child smaller\n        // if the number of children is smaller than itemsToShow.\n        // (Because we do not want \"empty slots\")\n\n        nextState.rootHeight = childHeight * Math.min(childrenLength, itemsToShow);\n        nextState.childHeight = childHeight;\n      } else {\n        nextState.rootHeight = sliderHeight;\n      }\n\n      _this.setState(nextState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"calculateChildWidth\", function () {\n      var sliderContainerWidth = _this.state.sliderContainerWidth;\n\n      var _this$getDerivedProps4 = _this.getDerivedPropsFromBreakPoint(),\n          verticalMode = _this$getDerivedProps4.verticalMode,\n          itemsToShow = _this$getDerivedProps4.itemsToShow,\n          showEmptySlots = _this$getDerivedProps4.showEmptySlots,\n          children = _this$getDerivedProps4.children;\n      /* based on slider container's width, get num of items to show\n          * and calculate child's width (and update it in state)\n          */\n\n\n      var childrenLength = Children.toArray(children).length || 1;\n      var childWidth = 0;\n\n      if (verticalMode) {\n        childWidth = sliderContainerWidth;\n      } else {\n        // When \"showEmptySlots\" is false\n        // We use Math.min because we don't want to make the child smaller\n        // if the number of children is smaller than itemsToShow.\n        // (Because we do not want \"empty slots\")\n        childWidth = sliderContainerWidth / (showEmptySlots ? itemsToShow : Math.min(childrenLength, itemsToShow));\n      }\n\n      return childWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onContainerResize\", function (sliderContainerNode) {\n      var newSliderContainerWidth = sliderContainerNode.contentRect.width; // update slider container width\n      // disable animation on resize see https://github.com/sag1v/react-elastic-carousel/issues/94\n\n      var _this$getDerivedProps5 = _this.getDerivedPropsFromBreakPoint(),\n          outerSpacing = _this$getDerivedProps5.outerSpacing,\n          initialVerticalMode = _this$getDerivedProps5.verticalMode;\n\n      var containerWidth = newSliderContainerWidth - (initialVerticalMode ? 0 : outerSpacing * 2);\n\n      if (!_this.isComponentMounted || _this.state.sliderContainerWidth === newSliderContainerWidth) {\n        // prevent infinite loop\n        return;\n      }\n\n      _this.setState({\n        sliderContainerWidth: containerWidth,\n        transitionMs: 0\n      }, function () {\n        // we must get these props inside setState (get future props because its async)\n        var _this$getDerivedProps6 = _this.getDerivedPropsFromBreakPoint(),\n            onResize = _this$getDerivedProps6.onResize,\n            itemsToShow = _this$getDerivedProps6.itemsToShow,\n            children = _this$getDerivedProps6.children;\n\n        var childrenLength = Children.toArray(children).length || 1;\n\n        _this.setState(function (currentState) {\n          // We might need to change the selected index when the size of the container changes\n          // we are making sure the selected index is not out of boundaries and respecting itemsToShow\n          // This usually happens with breakpoints. see https://github.com/sag1v/react-elastic-carousel/issues/122\n          var activeIndex = currentState.activeIndex; // we take the lowest, in case itemsToShow is greater than childrenLength\n\n          var maxItemsToShow = Math.min(childrenLength, itemsToShow);\n          var endLimit = childrenLength - maxItemsToShow;\n\n          if (activeIndex > endLimit) {\n            activeIndex = endLimit;\n          }\n\n          return {\n            activeIndex: activeIndex\n          };\n        }, function () {\n          /* Based on all of the above new data:\n          * update slider position\n          * get the new current breakpoint\n          * pass the current breakpoint to the consumer's callback\n          */\n          _this.updateSliderPosition();\n\n          var currentBreakPoint = _this.getDerivedPropsFromBreakPoint();\n\n          onResize(currentBreakPoint);\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"tiltMovement\", function (position) {\n      var distance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n      var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 150;\n\n      _this.setState(function (state) {\n        return {\n          isSwiping: true,\n          swipedSliderPosition: position - distance\n        };\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          isSwiping: false,\n          swipedSliderPosition: 0\n        });\n      }, duration);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertChildToCbObj\", function (index) {\n      var _this$getDerivedProps7 = _this.getDerivedPropsFromBreakPoint(),\n          children = _this$getDerivedProps7.children; // support decimal itemsToShow\n\n\n      var roundedIdx = Math.round(index);\n      var child = Children.toArray(children)[roundedIdx];\n      return {\n        item: child.props,\n        index: roundedIdx\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNextItemIndex\", function (currentIndex, getPrev) {\n      var _this$getDerivedProps8 = _this.getDerivedPropsFromBreakPoint(),\n          children = _this$getDerivedProps8.children,\n          itemsToShow = _this$getDerivedProps8.itemsToShow,\n          itemsToScroll = _this$getDerivedProps8.itemsToScroll;\n\n      var childrenLength = Children.toArray(children).length || 1;\n      var notEnoughItemsToShow = itemsToShow > childrenLength;\n      var limit = getPrev ? 0 : childrenLength - itemsToShow;\n\n      if (notEnoughItemsToShow) {\n        limit = 0; // basically don't move\n      }\n\n      var nextAction = getPrev ? prevItemAction(0, itemsToScroll) : nextItemAction(limit, itemsToScroll);\n      var nextItem = activeIndexReducer(currentIndex, nextAction);\n      return nextItem;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNextItemObj\", function (getPrev) {\n      var _this$getDerivedProps9 = _this.getDerivedPropsFromBreakPoint(),\n          children = _this$getDerivedProps9.children;\n\n      var activeIndex = _this.state.activeIndex;\n\n      var nextItemIndex = _this.getNextItemIndex(activeIndex, getPrev); // support decimal itemsToShow\n\n\n      var roundedIdx = Math.round(nextItemIndex);\n      var asElement = Children.toArray(children)[roundedIdx];\n      var asObj = {\n        item: asElement.props,\n        index: roundedIdx\n      };\n      return asObj;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetSwipe\", function () {\n      _this.setState({\n        swipedSliderPosition: 0,\n        transitioning: false,\n        isSwiping: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwiping\", function (data) {\n      var deltaX = data.deltaX,\n          absX = data.absX,\n          deltaY = data.deltaY,\n          absY = data.absY,\n          dir = data.dir;\n\n      _this.setState(function (state) {\n        var childHeight = state.childHeight,\n            activeIndex = state.activeIndex,\n            sliderPosition = state.sliderPosition;\n\n        var _this$getDerivedProps10 = _this.getDerivedPropsFromBreakPoint(),\n            itemsToShow = _this$getDerivedProps10.itemsToShow,\n            verticalMode = _this$getDerivedProps10.verticalMode,\n            children = _this$getDerivedProps10.children,\n            isRTL = _this$getDerivedProps10.isRTL;\n\n        var childWidth = _this.calculateChildWidth(); // determine how far can user swipe\n\n\n        var childrenLength = Children.toArray(children).length || 1;\n        var goingNext = !verticalMode && dir === \"Left\" && !isRTL || !verticalMode && dir === \"Right\" && isRTL || verticalMode && dir === \"Up\";\n        var goingBack = !verticalMode && dir === \"Right\" && !isRTL || !verticalMode && dir === \"Left\" && isRTL || verticalMode && dir === \"Down\";\n        var horizontalSwipe = dir === \"Left\" || dir === \"Right\";\n        var verticalSwipe = dir === \"Up\" || dir === \"Down\";\n        var horizontalMode = !verticalMode;\n        var distanceSwipe = 0;\n        var horizontalEdgeStoppage = childWidth / 2;\n        var verticalEdgeStoppage = childHeight / 2;\n\n        if (verticalMode) {\n          if (verticalSwipe) {\n            var trackSize = childrenLength * childHeight;\n\n            if (goingNext) {\n              distanceSwipe = trackSize - childHeight * activeIndex - itemsToShow * childHeight + verticalEdgeStoppage;\n            } else if (goingBack) {\n              distanceSwipe = childHeight * activeIndex + verticalEdgeStoppage;\n            }\n          }\n        } else {\n          if (horizontalSwipe) {\n            var _trackSize = childrenLength * childWidth;\n\n            if (goingNext) {\n              distanceSwipe = _trackSize - childWidth * activeIndex - itemsToShow * childWidth + horizontalEdgeStoppage;\n            } else if (goingBack) {\n              distanceSwipe = childWidth * activeIndex + horizontalEdgeStoppage;\n            }\n          }\n        }\n\n        var shouldHorizontalSkipUpdate = horizontalMode && verticalSwipe || horizontalMode && horizontalSwipe && absX > distanceSwipe;\n        var shouldVerticalSkipUpdate = verticalMode && horizontalSwipe || verticalMode && verticalSwipe && absY > distanceSwipe;\n\n        if (shouldHorizontalSkipUpdate || shouldVerticalSkipUpdate) {\n          // bail out of state update\n          return;\n        }\n\n        var swipedSliderPosition;\n\n        if (horizontalSwipe) {\n          if (isRTL) {\n            swipedSliderPosition = sliderPosition + deltaX;\n          } else {\n            swipedSliderPosition = sliderPosition - deltaX;\n          }\n        } else {\n          swipedSliderPosition = sliderPosition - deltaY;\n        }\n\n        return {\n          swipedSliderPosition: swipedSliderPosition,\n          isSwiping: true,\n          transitioning: true\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwiped\", function (data) {\n      // we need to handle all scenarios:\n      // 1. Horizontal mode - swipe left or right\n      // 2. Horizontal mode with RTL - swipe left or right\n      // 3. vertical mode - swipe up or down\n      var absX = data.absX,\n          absY = data.absY,\n          dir = data.dir;\n      var _this$state = _this.state,\n          childHeight = _this$state.childHeight,\n          activeIndex = _this$state.activeIndex;\n\n      var _this$getDerivedProps11 = _this.getDerivedPropsFromBreakPoint(),\n          verticalMode = _this$getDerivedProps11.verticalMode,\n          isRTL = _this$getDerivedProps11.isRTL,\n          itemsToScroll = _this$getDerivedProps11.itemsToScroll;\n\n      var childWidth = _this.calculateChildWidth();\n\n      var func = _this.resetSwipe;\n      var minSwipeDistanceHorizontal = childWidth / 5;\n      var minSwipeDistanceVertical = childHeight / 5;\n      var swipedLeft = dir === \"Left\";\n      var swipedRight = dir === \"Right\";\n      var swipedUp = dir === \"Up\";\n      var swipedDown = dir === \"Down\";\n      var verticalGoSwipe = verticalMode && (swipedUp || swipedDown) && absY > minSwipeDistanceVertical;\n      var horizontalGoSwipe = !verticalMode && (swipedRight || swipedLeft) && absX > minSwipeDistanceHorizontal;\n      var goodToGo = false;\n\n      if (verticalGoSwipe || horizontalGoSwipe) {\n        goodToGo = true;\n      }\n\n      if (goodToGo) {\n        // we should go to a different item\n        // determine what method we need to invoke\n        if (verticalMode) {\n          // get number of slides from user's swiping\n          var numberOfSlidesViaSwipe = Math.ceil((absY - minSwipeDistanceVertical) / childHeight); // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n\n          var numberOfSlidesTogo = Math.max(itemsToScroll, numberOfSlidesViaSwipe);\n          var backSlidesToGo = activeIndex - numberOfSlidesTogo;\n          var forwardSlideTtoGo = activeIndex + numberOfSlidesTogo; // up or down\n\n          if (swipedDown) {\n            // func = this.onPrevStart;\n            func = function func() {\n              return _this.goTo(backSlidesToGo);\n            };\n          }\n\n          if (swipedUp) {\n            // func = this.onNextStart;\n            func = function func() {\n              return _this.goTo(forwardSlideTtoGo);\n            };\n          }\n        } else {\n          // get number of slides from user's swiping\n          var _numberOfSlidesViaSwipe = Math.ceil((absX - minSwipeDistanceHorizontal) / childWidth); // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n\n\n          var _numberOfSlidesTogo = Math.max(itemsToScroll, _numberOfSlidesViaSwipe);\n\n          var _backSlidesToGo = activeIndex - _numberOfSlidesTogo;\n\n          var _forwardSlideTtoGo = activeIndex + _numberOfSlidesTogo; // horizontal mode\n\n\n          if (isRTL) {\n            // flip sides\n            if (swipedLeft) {\n              // func = this.onPrevStart;\n              func = function func() {\n                return _this.goTo(_backSlidesToGo);\n              };\n            }\n\n            if (swipedRight) {\n              // func = this.onNextStart;\n              func = function func() {\n                return _this.goTo(_forwardSlideTtoGo);\n              };\n            }\n          } else {\n            // normal behavior\n            if (swipedLeft) {\n              // func = this.onNextStart;\n              func = function func() {\n                return _this.goTo(_forwardSlideTtoGo);\n              };\n            }\n\n            if (swipedRight) {\n              // func = this.onPrevStart;\n              func = function func() {\n                return _this.goTo(_backSlidesToGo);\n              };\n            }\n          }\n        }\n      } // we are not \"tilting\" on edges, so we need to reset isSwiping and transitioning.\n      // otherwise we wont slide back to edge\n\n\n      _this.setState({\n        isSwiping: false,\n        transitioning: false\n      });\n\n      func({\n        skipTilt: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNextStart\", function (options) {\n      var _this$getDerivedProps12 = _this.getDerivedPropsFromBreakPoint(),\n          onNextStart = _this$getDerivedProps12.onNextStart;\n\n      var activeIndex = _this.state.activeIndex;\n\n      var nextItemObj = _this.getNextItemObj();\n\n      var prevItemObj = _this.convertChildToCbObj(activeIndex);\n\n      onNextStart(prevItemObj, nextItemObj);\n\n      _this.slideNext(options);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPrevStart\", function (options) {\n      var _this$getDerivedProps13 = _this.getDerivedPropsFromBreakPoint(),\n          onPrevStart = _this$getDerivedProps13.onPrevStart;\n\n      var activeIndex = _this.state.activeIndex;\n\n      var nextItemObj = _this.getNextItemObj(true);\n\n      var prevItemObj = _this.convertChildToCbObj(activeIndex);\n\n      onPrevStart(prevItemObj, nextItemObj);\n\n      _this.slidePrev(options);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slideNext\", function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var skipTilt = options.skipTilt;\n\n      var _this$getDerivedProps14 = _this.getDerivedPropsFromBreakPoint(),\n          enableTilt = _this$getDerivedProps14.enableTilt;\n\n      var _this$state2 = _this.state,\n          activeIndex = _this$state2.activeIndex,\n          sliderPosition = _this$state2.sliderPosition;\n\n      var nextItem = _this.getNextItemIndex(activeIndex, false);\n\n      if (activeIndex !== nextItem) {\n        _this.goTo(nextItem);\n      } else if (enableTilt && !skipTilt) {\n        _this.tiltMovement(sliderPosition, 20, 150);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slidePrev\", function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var skipTilt = options.skipTilt;\n      var activeIndex = _this.state.activeIndex;\n\n      var _this$getDerivedProps15 = _this.getDerivedPropsFromBreakPoint(),\n          enableTilt = _this$getDerivedProps15.enableTilt;\n\n      var prevItem = _this.getNextItemIndex(activeIndex, true);\n\n      if (activeIndex !== prevItem) {\n        _this.goTo(prevItem);\n      } else if (enableTilt && !skipTilt) {\n        _this.tiltMovement(0, -20, 150);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNextEnd\", function () {\n      var _this$getDerivedProps16 = _this.getDerivedPropsFromBreakPoint(),\n          onNextEnd = _this$getDerivedProps16.onNextEnd,\n          onChange = _this$getDerivedProps16.onChange;\n\n      var _this$state3 = _this.state,\n          activeIndex = _this$state3.activeIndex,\n          activePage = _this$state3.activePage;\n\n      var nextItemObj = _this.convertChildToCbObj(activeIndex);\n\n      _this.removeSliderTransitionHook(_this.onNextEnd);\n\n      _this.setState({\n        transitioning: false\n      });\n\n      onChange && onChange(nextItemObj, activePage);\n      onNextEnd(nextItemObj, activePage);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPrevEnd\", function () {\n      var _this$getDerivedProps17 = _this.getDerivedPropsFromBreakPoint(),\n          onPrevEnd = _this$getDerivedProps17.onPrevEnd,\n          onChange = _this$getDerivedProps17.onChange;\n\n      var _this$state4 = _this.state,\n          activeIndex = _this$state4.activeIndex,\n          activePage = _this$state4.activePage;\n\n      var nextItemObj = _this.convertChildToCbObj(activeIndex);\n\n      _this.removeSliderTransitionHook(_this.onPrevEnd);\n\n      _this.setState({\n        transitioning: false\n      });\n\n      onChange && onChange(nextItemObj, activePage);\n      onPrevEnd(nextItemObj, activePage);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"generatePositionUpdater\", function (direction, nextItemId, verticalMode, rest) {\n      return function (state) {\n        var sliderPosition = state.sliderPosition,\n            childHeight = state.childHeight,\n            activeIndex = state.activeIndex;\n\n        var childWidth = _this.calculateChildWidth();\n\n        var newSliderPosition = 0;\n        var childSize = verticalMode ? childHeight : childWidth;\n\n        if (direction === consts.NEXT) {\n          newSliderPosition = sliderPosition - childSize * (nextItemId - activeIndex);\n        } else {\n          newSliderPosition = sliderPosition + childSize * (activeIndex - nextItemId);\n        }\n\n        return _objectSpread2({\n          sliderPosition: newSliderPosition,\n          activeIndex: nextItemId,\n          swipedSliderPosition: 0,\n          isSwiping: false\n        }, rest);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"goTo\", function (nextItemId) {\n      var _this$getDerivedProps18 = _this.getDerivedPropsFromBreakPoint(),\n          children = _this$getDerivedProps18.children,\n          verticalMode = _this$getDerivedProps18.verticalMode,\n          itemsToShow = _this$getDerivedProps18.itemsToShow;\n\n      var activeIndex = _this.state.activeIndex;\n      var childrenLength = Children.toArray(children).length;\n      var safeNextItemId = Math.max(0, nextItemId); // don't allow negative numbers\n\n      var isPrev = activeIndex > safeNextItemId;\n\n      var nextAvailableItem = _this.getNextItemIndex(activeIndex, isPrev);\n\n      var noChange = nextAvailableItem === activeIndex;\n      var outOfBoundary = safeNextItemId + itemsToShow >= childrenLength;\n\n      if (noChange) {\n        return;\n      }\n\n      if (outOfBoundary) {\n        // Either go to last index (respect itemsToShow) or 0 index if we can't fill the slider\n        safeNextItemId = Math.max(0, childrenLength - itemsToShow);\n      }\n\n      var direction = consts.NEXT;\n      var positionEndCb = _this.onNextEnd;\n\n      if (isPrev) {\n        direction = consts.PREV;\n        positionEndCb = _this.onPrevEnd;\n      }\n\n      var stateUpdater = _this.generatePositionUpdater(direction, safeNextItemId, verticalMode, {\n        transitioning: true\n      });\n\n      _this.setState(stateUpdater, function () {\n        // callback\n        pipe(_this.updateActivePage(), _this.onSliderTransitionEnd(positionEndCb));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNumOfPages\", function () {\n      var _this$getDerivedProps19 = _this.getDerivedPropsFromBreakPoint(),\n          children = _this$getDerivedProps19.children,\n          itemsToShow = _this$getDerivedProps19.itemsToShow;\n\n      var childrenLength = Children.toArray(children).length;\n      var safeItemsToShow = Math.max(itemsToShow, 1);\n      var numOfPages = Math.ceil(childrenLength / safeItemsToShow);\n      return numOfPages || 1;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateActivePage\", function () {\n      _this.setState(function (state) {\n        var _this$getDerivedProps20 = _this.getDerivedPropsFromBreakPoint(),\n            itemsToShow = _this$getDerivedProps20.itemsToShow,\n            children = _this$getDerivedProps20.children;\n\n        var activeIndex = state.activeIndex,\n            activePage = state.activePage;\n\n        var numOfPages = _this.getNumOfPages();\n\n        var childrenLength = Children.toArray(children).length;\n        var inRangeItemsToShow = Math.min(childrenLength, itemsToShow); // watch out from 0 (so we wont divide by zero)\n\n        var safeItemsToShow = Math.max(inRangeItemsToShow, 1);\n        var newActivePage = Math.ceil(activeIndex / safeItemsToShow);\n        var inRangeActivePageIndex = Math.min(numOfPages - 1, newActivePage);\n\n        if (activePage !== inRangeActivePageIndex) {\n          return {\n            activePage: inRangeActivePageIndex\n          };\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onIndicatorClick\", function (indicatorId) {\n      var _this$getDerivedProps21 = _this.getDerivedPropsFromBreakPoint(),\n          itemsToShow = _this$getDerivedProps21.itemsToShow;\n\n      var gotoIndex = indicatorId * itemsToShow;\n\n      _this.setState({\n        activePage: indicatorId\n      });\n\n      _this.goTo(gotoIndex);\n    });\n\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.isComponentMounted = true;\n      this.initResizeObserver();\n      this.updateActivePage();\n      this.setPages();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props2 = this.props,\n          enableAutoPlay = _this$props2.enableAutoPlay,\n          children = _this$props2.children,\n          itemsToShow = _this$props2.itemsToShow,\n          itemsToScroll = _this$props2.itemsToScroll,\n          breakPoints = _this$props2.breakPoints;\n      var _this$state5 = this.state,\n          activeIndex = _this$state5.activeIndex,\n          sliderContainerWidth = _this$state5.sliderContainerWidth;\n      var nextItem = this.getNextItemIndex(activeIndex, false);\n      var currentChildrenLength = Children.toArray(children).length;\n      var prevChildrenLength = Children.toArray(prevProps.children).length; // update pages (for pagination)\n\n      if (prevChildrenLength !== currentChildrenLength || prevProps.itemsToShow !== itemsToShow || prevProps.itemsToScroll !== itemsToScroll || prevProps.breakPoints !== breakPoints || sliderContainerWidth !== prevState.sliderContainerWidth) {\n        // we mimic a container resize to recalculate item width when itemsToShow are updated\n        this.onContainerResize({\n          contentRect: {\n            width: sliderContainerWidth\n          }\n        });\n        this.setPages();\n        this.updateActivePage();\n      } // autoplay update\n\n\n      if (activeIndex === nextItem) {\n        this.removeAutoPlay();\n      } else if (enableAutoPlay && !this.autoPlayIntervalId) {\n        this.setAutoPlay();\n      } else if (!enableAutoPlay && this.autoPlayIntervalId) {\n        this.removeAutoPlay();\n      }\n\n      if (prevChildrenLength !== currentChildrenLength) {\n        var _this$getDerivedProps22 = this.getDerivedPropsFromBreakPoint(),\n            calculatedItemsToShow = _this$getDerivedProps22.itemsToShow; // number of items is reduced (we don't care if number of items is increased)\n        // we need to check if our current index is not out of boundaries\n        // we need to include itemsToShow so we can fill up the slots\n\n\n        var lastIndex = currentChildrenLength - 1;\n        var isOutOfRange = activeIndex + calculatedItemsToShow > lastIndex;\n\n        if (isOutOfRange) {\n          // we are out of boundaries, go \"back\" to last item of the list (respect itemsToShow)\n          this.goTo(Math.max(0, currentChildrenLength - calculatedItemsToShow));\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isComponentMounted = false;\n      this.removeAutoPlay();\n      this.unSubscribeObserver();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state6 = this.state,\n          activePage = _this$state6.activePage,\n          isSwiping = _this$state6.isSwiping,\n          sliderPosition = _this$state6.sliderPosition,\n          swipedSliderPosition = _this$state6.swipedSliderPosition,\n          rootHeight = _this$state6.rootHeight,\n          pages = _this$state6.pages,\n          activeIndex = _this$state6.activeIndex,\n          transitionMs = _this$state6.transitionMs;\n\n      var _this$getDerivedProps23 = this.getDerivedPropsFromBreakPoint(),\n          className = _this$getDerivedProps23.className,\n          style = _this$getDerivedProps23.style,\n          itemsToShow = _this$getDerivedProps23.itemsToShow,\n          itemsToScroll = _this$getDerivedProps23.itemsToScroll,\n          verticalMode = _this$getDerivedProps23.verticalMode,\n          isRTL = _this$getDerivedProps23.isRTL,\n          easing = _this$getDerivedProps23.easing,\n          tiltEasing = _this$getDerivedProps23.tiltEasing,\n          children = _this$getDerivedProps23.children,\n          focusOnSelect = _this$getDerivedProps23.focusOnSelect,\n          autoTabIndexVisibleItems = _this$getDerivedProps23.autoTabIndexVisibleItems,\n          itemPosition = _this$getDerivedProps23.itemPosition,\n          itemPadding = _this$getDerivedProps23.itemPadding,\n          outerSpacing = _this$getDerivedProps23.outerSpacing,\n          enableSwipe = _this$getDerivedProps23.enableSwipe,\n          enableMouseSwipe = _this$getDerivedProps23.enableMouseSwipe,\n          pagination = _this$getDerivedProps23.pagination,\n          showArrows = _this$getDerivedProps23.showArrows,\n          disableArrowsOnEnd = _this$getDerivedProps23.disableArrowsOnEnd,\n          preventDefaultTouchmoveEvent = _this$getDerivedProps23.preventDefaultTouchmoveEvent,\n          renderArrow = _this$getDerivedProps23.renderArrow,\n          renderPagination = _this$getDerivedProps23.renderPagination;\n\n      var childWidth = this.calculateChildWidth();\n      var numOfPages = this.getNumOfPages();\n      /** Determine if arrows should be disabled */\n\n      var canSlidePrev = activeIndex !== this.getNextItemIndex(activeIndex, true);\n      var canSlideNext = activeIndex !== this.getNextItemIndex(activeIndex, false);\n      var disabledPrevArrow = !canSlidePrev && disableArrowsOnEnd;\n      var disabledNextArrow = !canSlideNext && disableArrowsOnEnd;\n      return /*#__PURE__*/React.createElement(CarouselWrapper, {\n        isRTL: isRTL,\n        className: \"\".concat(cssPrefix(\"carousel-wrapper\"), \" \").concat(className),\n        style: style\n      }, /*#__PURE__*/React.createElement(StyledCarousel, {\n        className: cssPrefix(\"carousel\"),\n        size: {\n          height: rootHeight\n        }\n      }, /*#__PURE__*/React.createElement(Only, {\n        when: showArrows\n      }, renderArrow ? renderArrow({\n        type: consts.PREV,\n        onClick: this.onPrevStart,\n        isEdge: !canSlidePrev\n      }) : /*#__PURE__*/React.createElement(Arrow, {\n        onClick: this.onPrevStart,\n        direction: verticalMode ? Arrow.up : Arrow.left,\n        disabled: disabledPrevArrow\n      })), /*#__PURE__*/React.createElement(SliderContainer, {\n        className: cssPrefix(\"slider-container\"),\n        ref: this.setRef(\"sliderContainer\")\n      }, /*#__PURE__*/React.createElement(Slider, {\n        verticalMode: verticalMode,\n        isRTL: isRTL,\n        easing: easing,\n        sliderPosition: sliderPosition,\n        swipedSliderPosition: swipedSliderPosition,\n        isSwiping: isSwiping,\n        transitionMs: transitionMs,\n        tiltEasing: tiltEasing,\n        className: cssPrefix(\"slider\"),\n        ref: this.setRef(\"slider\"),\n        outerSpacing: outerSpacing\n      }, /*#__PURE__*/React.createElement(Track, {\n        verticalMode: verticalMode,\n        children: Children.toArray(children),\n        childWidth: childWidth,\n        currentItem: activeIndex,\n        autoTabIndexVisibleItems: autoTabIndexVisibleItems,\n        itemsToShow: itemsToShow,\n        itemsToScroll: itemsToScroll,\n        itemPosition: itemPosition,\n        itemPadding: itemPadding,\n        enableSwipe: enableSwipe,\n        enableMouseSwipe: enableMouseSwipe,\n        preventDefaultTouchmoveEvent: preventDefaultTouchmoveEvent,\n        onSwiped: this.onSwiped,\n        onSwiping: this.onSwiping,\n        onItemClick: focusOnSelect ? this.goTo : undefined\n      }))), /*#__PURE__*/React.createElement(Only, {\n        when: showArrows\n      }, renderArrow ? renderArrow({\n        type: consts.NEXT,\n        onClick: this.onNextStart,\n        isEdge: !canSlideNext\n      }) : /*#__PURE__*/React.createElement(Arrow, {\n        onClick: this.onNextStart,\n        direction: verticalMode ? Arrow.down : Arrow.right,\n        disabled: disabledNextArrow\n      }))), /*#__PURE__*/React.createElement(Only, {\n        when: pagination\n      }, renderPagination ? renderPagination({\n        pages: pages,\n        activePage: activePage,\n        onClick: this.onIndicatorClick\n      }) : /*#__PURE__*/React.createElement(Pagination, {\n        numOfPages: numOfPages,\n        activePage: activePage,\n        onClick: this.onIndicatorClick\n      })));\n    }\n  }]);\n\n  return Carousel;\n}(React.Component);\n\nCarousel.defaultProps = {\n  className: \"\",\n  style: {},\n  verticalMode: false,\n  isRTL: false,\n  initialFirstItem: 0,\n  initialActiveIndex: 0,\n  showArrows: true,\n  showEmptySlots: false,\n  disableArrowsOnEnd: true,\n  pagination: true,\n  easing: \"ease\",\n  tiltEasing: \"ease\",\n  transitionMs: 500,\n  enableTilt: true,\n  enableSwipe: true,\n  enableMouseSwipe: true,\n  preventDefaultTouchmoveEvent: false,\n  focusOnSelect: false,\n  autoTabIndexVisibleItems: true,\n  itemsToShow: 1,\n  itemsToScroll: 1,\n  itemPosition: consts.CENTER,\n  itemPadding: [0, 0, 0, 0],\n  outerSpacing: 0,\n  enableAutoPlay: false,\n  autoPlaySpeed: 2000,\n  // callbacks\n  onChange: noop,\n  onNextEnd: noop,\n  onPrevEnd: noop,\n  onNextStart: noop,\n  onPrevStart: noop,\n  onResize: noop\n};\nCarousel.propTypes = {\n  /** Items to render */\n  children: PropTypes.node.isRequired,\n\n  /** The css class for the root element */\n  className: PropTypes.string,\n\n  /** The style object for the root element */\n  style: PropTypes.object,\n\n  /** Display the Carousel in a vertical layout */\n  verticalMode: PropTypes.bool,\n\n  /** Flip right to left */\n  isRTL: PropTypes.bool,\n\n  /** Show dots for paging */\n  pagination: PropTypes.bool,\n\n  /** Animation speed */\n  transitionMs: PropTypes.number,\n\n  /** transition easing pattern */\n  easing: PropTypes.string,\n\n  /** transition easing pattern for the tilt */\n  tiltEasing: PropTypes.string,\n\n  /** The \"bump\" animation when reaching the last item */\n  enableTilt: PropTypes.bool,\n\n  /** Number of visible items  */\n  itemsToShow: PropTypes.number,\n\n  /** Number of items to scroll */\n  itemsToScroll: PropTypes.number,\n\n  /** Collection of objects with a width, itemsToShow and itemsToScroll  */\n  breakPoints: PropTypes.arrayOf(PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    itemsToShow: PropTypes.number,\n    itemsToScroll: PropTypes.number\n  })),\n\n  /** The initial active index when the component mounts */\n  initialActiveIndex: PropTypes.number,\n\n  /** **DEPRECATED - use initialActiveIndex instead** The first items when the component mounts */\n  initialFirstItem: PropTypes.number,\n\n  /** Show the arrow buttons */\n  showArrows: PropTypes.bool,\n\n  /** Show empty slots when children.length < itemsToShow (not compatible with verticalMode yet !) */\n  showEmptySlots: PropTypes.bool,\n\n  /** Disables the arrow button when there are no more items */\n  disableArrowsOnEnd: PropTypes.bool,\n\n  /** Go to item on click */\n  focusOnSelect: PropTypes.bool,\n\n  /** Automatically inject `tabIndex:0` to visible items */\n  autoTabIndexVisibleItems: PropTypes.bool,\n\n  /** A render prop for the arrow component\n   * - ({type, onClick}) => <div onClick={onClick}>{type === 'prev' ? '<-' : '->'}</div>\n   */\n  renderArrow: PropTypes.func,\n\n  /** A render prop for the pagination component\n   * - ({ pages, activePage, onClick }) =>  <YourComponent/>\n   */\n  renderPagination: PropTypes.func,\n\n  /** Position the element relative to it's wrapper (use the consts object) - consts.START | consts.CENTER | consts.END */\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END]),\n\n  /** A padding for each element  */\n  itemPadding: PropTypes.array,\n\n  /** A margin at the beginning and at the end of the carousel (not compatible with verticalMode yet !) */\n  outerSpacing: PropTypes.number,\n  // swipe\n\n  /** Enable or disable swipe */\n  enableSwipe: PropTypes.bool,\n\n  /** Enable or disable mouse swipe */\n  enableMouseSwipe: PropTypes.bool,\n\n  /** Prevent page scroll on touchmove.\n   * Use this to stop the browser from scrolling while a user swipes.\n   * More details: https://github.com/FormidableLabs/react-swipeable#preventdefaulttouchmoveevent-details\n   */\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  // auto play\n\n  /** Enable or disable auto play */\n  enableAutoPlay: PropTypes.bool,\n\n  /** Set auto play speed (ms) */\n  autoPlaySpeed: PropTypes.number,\n  // callbacks\n\n  /** A callback for the change of an item\n   * - onChange(currentItemObject, currentPageIndex) => {} */\n  onChange: PropTypes.func,\n\n  /** A callback for the beginning of the next transition\n   * - onNextStart(prevItemObject, nextItemObject) => {} */\n  onNextStart: PropTypes.func,\n\n  /** A callback for the beginning of the prev transition\n   * - onPrevStart(prevItemObject, nextItemObject) => {} */\n  onPrevStart: PropTypes.func,\n\n  /** A callback for the end of the next transition\n   * - onNextEnd(nextItemObject, currentPageIndex) => {} */\n  onNextEnd: PropTypes.func,\n\n  /** A callback for the end of the prev transition\n   * - onPrevEnd(nextItemObject, currentPageIndex) => {} */\n  onPrevEnd: PropTypes.func,\n\n  /** A callback for the \"slider-container\" resize\n   * - onResize(currentBreakPoint) => {} */\n  onResize: PropTypes.func\n};\nexport default Carousel;\nexport { consts };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAnB;;AAEP,IAAaC,aAAa,GAAG,SAAhBA,aAAgB,IAAC;4BAAQC,KAAK,CAACC,CAAD,CAALD,CAASE,IAATF;AAA/B,CAAP;;AAEA,IAAaG,SAAS,GAAG,SAAZA,SAAY,GAAmB;MACpCC,MAAM,GAAG;MACTC,KAAK,GAAG;MACVC,MAAM,aAAMF,MAAN,EAHgC;;;oCAAfG,UAAe;IAAfA,UAAe,MAAfA,GAAeC,eAAfD;;;MAMrBE,cAAc,GAAGF,UAAU,CAACG,MAAXH,CAAkB,UAACI,GAAD,EAAMC,OAAN,EAAkB;QACrDA,SAAS;MACXD,GAAG,cAAON,KAAP,SAAeD,MAAf,cAAyBQ,OAAzB,CAAHD,CADW;;;WAGNA;EAJc,GAKpB,EALoBJ;EAMvBD,MAAM,IAAIG,cAAVH;SAEOA;AAdF,CAAP;;AAiBA,IAAaO,IAAI,GAAG,SAAPA,IAAO;qCAAIC,GAAJ;IAAIA,GAAJ,OAAIA,GAAJN,gBAAIM;;;SAAQ,aAAC;WAAIA,GAAG,CAACJ,MAAJI,CAAW,UAACC,CAAD,EAAIC,CAAJ;aAAUA,CAAC,CAACD,CAAD;IAAtB,GAA2BE,CAA3BH;EAAjB;AAAb,CAAP;;;;;;;;;;;;ACnBA,aAAeI,MAAM,CAACC,MAAPD,CAAcE,KAAdF,CAAoB;uBAAGG;MAAAA,IAAH,0BAAU,QAAV;SAA0B;IAAEA,IAAI,EAAJA;EAAF;AAA9C,GAAfC,iBAAeJ,EAKJ,iBAAK;SAAKK,KAAK,CAACC,QAAND,GAAiB,MAAjBA,GAA0B;AAL/C,CAAeL,CAAf;ACFA,aAAe;EACbO,IAAI,EAAE,MADO;EAEbC,IAAI,EAAE,MAFO;EAGbC,KAAK,EAAE,YAHM;EAIbC,MAAM,EAAE,QAJK;EAKbC,GAAG,EAAE;AALQ,CAAf;;;;;;;;;;;;ACKA,IAAMC,WAAW,GAAGZ,MAAM,CAACa,GAAPb,CAAWE,KAAXF,CAAiB;MAAGc,KAAH,QAAGA;SAAa;IACnDA,KAAK,EAALA,KADmD;IAEnDC,SAAS,EAAE9B,SAAS,CAAC,cAAD;EAF+B;AAAjC,GAAH+B,mBAAGhB,EAQC;MAAGiB,YAAH,SAAGA;SAAmBA;AAR1B,CAAGjB,CAApB;AAWAY,WAAW,CAACM,YAAZN,GAA2B;EACzBE,KAAK,EAAE,EADkB;EAEzBG,YAAY,EAAEE,MAAM,CAACT;AAFI,CAA3BE;AAKAA,WAAW,CAACQ,SAAZR,GAAwB;EACtBS,QAAQ,EAAEC,SAAS,CAACC,OAAVD,CAAkBE,UADN;EAEtBV,KAAK,EAAEQ,SAAS,CAACG,MAFK;EAGtBR,YAAY,EAAEK,SAAS,CAACI,KAAVJ,CAAgB,CAACH,MAAM,CAACV,KAAR,EAAeU,MAAM,CAACT,MAAtB,EAA8BS,MAAM,CAACR,GAArC,CAAhBW;AAHQ,CAAxBV;;;;;;;;;;;;ACnBA,sBAAeZ,MAAM,CAACa,GAAPb,CAAf2B,mBAAe3B,CAAf;;;;;;;;;;;;ACAA,IAAM4B,QAAQ,GAAG,SAAXA,QAAW,OAMX;MALJC,KAKI,QALJA;MACAC,YAII,QAJJA;MACAC,SAGI,QAHJA;MACAC,oBAEI,QAFJA;MACAC,cACI,QADJA;;MAEIH,YAAY,IAAID,OAAO;WAClB;EADT,OAEO;qBACKE,SAAS,GAAGC,oBAAH,GAA0BC,gBAA7C;;AAVJ;;AAcA,IAAMC,SAAS,GAAG,SAAZA,SAAY,QAMZ;MALJL,KAKI,SALJA;MACAC,YAII,SAJJA;MACAC,SAGI,SAHJA;MACAC,oBAEI,SAFJA;MACAC,cACI,SADJA;;MAEI,CAACH,YAAD,IAAiBD,OAAO;qBAChBE,SAAS,GAAGC,oBAAH,GAA0BC,gBAA7C;EADF,OAEO;WACE;;AAVX;;AAcA,IAAME,OAAO,GAAG,SAAVA,OAAU,QAKV;MAJJL,YAII,SAJJA;MACAC,SAGI,SAHJA;MACAC,oBAEI,SAFJA;MACAC,cACI,SADJA;;MAEI,CAACH,cAAc;WACV;EADT,OAEO;qBACKC,SAAS,GAAGC,oBAAH,GAA0BC,gBAA7C;;AATJ;;AAaA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,QAAqD;MAAlDL,SAAkD,SAAlDA;MAAWM,YAAuC,SAAvCA;MAAcC,MAAyB,SAAzBA;MAAQC,UAAiB,SAAjBA;MACnDC,QAAQ,GAAGT,SAAS,GAAG,CAAH,GAAOM;MAC3BI,eAAe,GAAGV,SAAS,GAAGQ,UAAH,GAAgBD;uBACnCE,UAAd,cAA4BC;AAH9B,E,CAAA;;;AAOA,aAAezC,MAAM,CAACa,GAAPb,CAAWE,KAAXF,CAAiB,iBAAK;SAAK;IACxCc,KAAK,EAAE;MACL4B,UAAU,EAAEN,cAAc,CAAC/B,KAAD,CADrB;MAELsC,IAAI,EAAEf,QAAQ,CAACvB,KAAD,CAFT;MAGLuC,KAAK,EAAEV,SAAS,CAAC7B,KAAD,CAHX;MAILwC,GAAG,EAAEV,OAAO,CAAC9B,KAAD;IAJP;EADiC;AAA3B,GAAfyC,mBAAe9C,EAUK;MAAG8B,YAAH,SAAGA;SAAoBA,YAAY,GAAG,QAAH,GAAc;AAVrE,CAAe9B,EAWX;MAAG8B,YAAH,SAAGA;SAAoBA,YAAY,GAAG,mBAAH,GAAyB;AAXhE,CAAe9B,EAYX;MAAG8B,YAAH,SAAGA;MAAciB,YAAjB,SAAiBA;SACjBjB,YAAY,GAAG,EAAH,uBAAqBiB,YAArB;AAbhB,CAAe/C,CAAf;;;;;;;;;;;;AChDA,qBAAeA,MAAM,CAACa,GAAPb,CAAWE,KAAXF,CAAiB,iBAAK;SAAK;IACxCc,KAAK,EAAE;MACLkC,MAAM,EAAE3C,KAAK,CAAC4C,IAAN5C,CAAW2C;IADd;EADiC;AAA3B,GAAfE,mBAAelD,CAAf;;;;;;;;;;;;ACAA,sBAAeA,MAAM,CAACa,GAAPb,CAAfmD,mBAAenD,EAKA;MAAG6B,KAAH,QAAGA;SAAaA,KAAK,GAAG,KAAH,GAAW;AAL/C,CAAe7B,CAAf;;ICGMoD;;;;;;;;;;;;;;;;8DACM,YAAM;wBACUC,MAAKhD;UAArBiD,OADM,eACNA;UAASC,EADH,eACGA;MACjBD,OAAO,CAACC,EAAD,CAAPD;;;;;;;;6BAEO;0BACAE,oBAAC5C,WAAD,eAAiB,KAAKP,KAAtB;QAA6BiD,OAAO,EAAE,KAAKA;MAA3C;;;;;CANLF,CAA6BI,KAAK,CAACC,SAAnCL;;AAUNA,oBAAoB,CAAClC,YAArBkC,GAAoC;EAClCE,OAAO,EAAE1E;AADyB,CAApCwE;AAIAA,oBAAoB,CAAChC,SAArBgC,GAAiC;EAC/BG,EAAE,EAAEjC,SAAS,CAACoC,SAAVpC,CAAoB,CAACA,SAAS,CAACqC,MAAX,EAAmBrC,SAAS,CAACsC,MAA7B,CAApBtC,CAD2B;EAE/BgC,OAAO,EAAEhC,SAAS,CAACuC;AAFY,CAAjCT;;ACbA,IAAMU,KAAK,GAAG,SAARA,KAAQ,OAgBR;MAfJzC,QAeI,QAfJA;MACA0C,UAcI,QAdJA;MACAC,wBAaI,QAbJA;MACAC,WAYI,QAZJA;MACAC,gBAWI,QAXJA;MACAC,4BAUI,QAVJA;MACAC,WASI,QATJA;MACAC,aAQI,QARJA;MACAC,WAOI,QAPJA;MACArD,YAMI,QANJA;MACAsD,WAKI,QALJA;MACAC,QAII,QAJJA;MACAC,SAGI,QAHJA;MACA3C,YAEI,QAFJA;MACA4C,WACI,QADJA;MAEMC,KAAK,aAAMZ,UAAN;MACLa,YAAY,aAAML,WAAW,CAACM,IAAZN,CAAiB,KAAjBA,CAAN;MACZO,cAAc,GAAGR;MACjBS,cAAc,GAAGT,WAAW,GAAGF;MAC/BY,QAAQ,GAAGF,cAAc,GAAGT;MAC5BY,QAAQ,GAAGF,cAAc,GAAGV;MAE5Ba,gBAAgB,GAAG1B,KAAK,CAAC2B,QAAN3B,CAAe4B,GAAf5B,CAAmBnC,QAAnBmC,EAA6B,UAAC6B,KAAD,EAAQC,GAAR,EAAgB;QAC9DC,SAAS,GAAGD,GAAG,IAAIR,cAAPQ,IAAyBA,GAAG,GAAGP;QAC3CS,UAAU,GAAG,CAACD,SAAD,IAAcD,GAAG,IAAIN,QAArB,IAAiCM,GAAG,GAAGhB;QACpDmB,UAAU,GAAG,CAACF,SAAD,IAAcD,GAAG,GAAGL,QAApB,IAAgCK,GAAG,GAAGhB;QACnDoB,SAAS,GAAG;QAEZC,aAAa,GAAG3B,wBAAwB,gBAC1CR,KAAK,CAACoC,YAANpC,CAAmB6B,KAAnB7B,EAA0B;MACxBqC,QAAQ,EAAEN,SAAS,GAAG,CAAH,GAAO,CAAC;IADH,CAA1B/B,CAD0C,GAI1C6B;wBAEF7B;MACEzC,SAAS,EAAE9B,SAAS,CAClByG,SADkB,YAEfA,SAFe,cAEFJ,GAFE,aAGfI,SAHe,cAGFH,SAAS,GAAG,SAAH,GAAe,QAHtB,GAIlBC,UAAU,cAAOE,SAAP,UAJQ,EAKlBD,UAAU,cAAOC,SAAP,UALQ;IADtB,gBASElC,oBAACJ,oBAAD;MACEG,EAAE,EAAE+B,GADN;MAEErE,YAAY,EAAEA,YAFhB;MAGEH,KAAK,EAAE;QAAE6D,KAAK,EAALA,KAAF;QAASmB,OAAO,EAAElB;MAAlB,CAHT;MAIEmB,GAAG,EAAET,GAJP;MAKEhC,OAAO,EAAEoB;IALX,GAOGiB,aAPH,CATF;EAZqB;MAiCnBK,QAAQ,GAAG/B,WAAW,gBAC1BT,oBAACyC,SAAD;IACEnF,KAAK,EAAE;MACLoF,OAAO,EAAE,MADJ;MAELC,aAAa,EAAErE,YAAY,GAAG,QAAH,GAAc;IAFpC,CADT;IAKEsE,eAAe,MALjB;IAMEjC,4BAA4B,EAAEA,4BANhC;IAOEkC,UAAU,EAAEnC,gBAPd;IAQEM,QAAQ,EAAEA,QARZ;IASEC,SAAS,EAAEA,SATb;IAUE1D,SAAS,EAAE9B,SAAS,CAAC,UAAD;EAVtB,GAYGiG,gBAZH,CAD0B,GAgB1BA;SAEKc;AA3ET;;AA8EAlC,KAAK,CAAC1C,SAAN0C,GAAkB;EAChBzC,QAAQ,EAAEC,SAAS,CAACgF,KAAVhF,CAAgBE,UADV;EAEhB4C,WAAW,EAAE9C,SAAS,CAACsC,MAAVtC,CAAiBE,UAFd;EAGhB+E,iBAAiB,EAAEjF,SAAS,CAACkF,IAHb;EAIhBlC,WAAW,EAAEhD,SAAS,CAACsC,MAAVtC,CAAiBE,UAJd;EAKhBP,YAAY,EAAEK,SAAS,CAACqC,MALR;EAMhBY,WAAW,EAAEjD,SAAS,CAACgF,KANP;EAOhBvC,UAAU,EAAEzC,SAAS,CAACsC,MAPN;EAQhB9B,YAAY,EAAER,SAAS,CAACkF,IARR;EAShBvC,WAAW,EAAE3C,SAAS,CAACkF,IATP;EAUhBtC,gBAAgB,EAAE5C,SAAS,CAACkF,IAVZ;EAWhBrC,4BAA4B,EAAE7C,SAAS,CAACkF,IAXxB;EAYhBhC,QAAQ,EAAElD,SAAS,CAACuC,IAZJ;EAahBY,SAAS,EAAEnD,SAAS,CAACuC,IAbL;EAchBa,WAAW,EAAEpD,SAAS,CAACuC;AAdP,CAAlBC;AC9EA,IAAM2C,cAAc,GAAG;EACrB9D,IAAI,EAAE,GADe;EAErBC,KAAK,EAAE,GAFc;EAGrB8D,EAAE,EAAE,GAHiB;EAIrBC,IAAI,EAAE;AAJe,CAAvB;AAOA,IAAMC,cAAc,GAAG3H,SAAS,CAAC,OAAD,CAAhC;;AAEA,IAAM4H,WAAW,GAAG,SAAdA,WAAc,YAAa;MAC3BC,MAAM,GAAG;;MACTC,SAAS,KAAKC,KAAK,CAACN,EAApBK,IAA0BA,SAAS,KAAKC,KAAK,CAACL,MAAM;IACtDG,MAAM,CAACG,SAAPH,GAAmB,eAAnBA;;;SAEKA;AALT;;AAOA,IAAME,KAAK,GAAG,SAARA,KAAQ,OAAmD;MAAhDD,SAAgD,QAAhDA;MAAWzD,OAAqC,QAArCA;MAAS4D,KAA4B,QAA5BA;MAAOpG,KAAqB,QAArBA;MAAUqG,IAAW;;MACzDC,MAAM,qCAAQX,cAAR,GAA2BS,KAA3B;;MACNG,QAAQ,qCACTR,WAAW,CAACE,SAAD,CADF,GAETjG,KAFS;;sBAKZ0C,oBAAC8D,MAAD;IACEzB,QAAQ,EAAE,CADZ;IAEEvC,OAAO,EAAEA,OAFX;IAGEvC,SAAS,EAAEwG,EAAE,CAACX,cAAD,YAAoBA,cAApB,cAAsCG,SAAtC,EAHf;IAIEjG,KAAK,EAAEuG;EAJT,GAKMF,IALN,GAOGC,MAAM,CAACL,SAAD,CAPT;AAPJ;;AAmBAC,KAAK,CAACrE,IAANqE,GAAa,MAAbA;AACAA,KAAK,CAACpE,KAANoE,GAAc,OAAdA;AACAA,KAAK,CAACN,EAANM,GAAW,IAAXA;AACAA,KAAK,CAACL,IAANK,GAAa,MAAbA;AAEAA,KAAK,CAAC5F,SAAN4F,GAAkB;EAChBD,SAAS,EAAEzF,SAAS,CAACI,KAAVJ,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,IAAlB,EAAwB,MAAxB,CAAhBA,EAAiDE,UAD5C;EAEhB0F,KAAK,EAAE5F,SAAS,CAACG,MAFD;EAGhBX,KAAK,EAAEQ,SAAS,CAACG,MAHD;EAIhB6B,OAAO,EAAEhC,SAAS,CAACuC;AAJH,CAAlBmD;AC9CO,IAAMQ,SAAS,GAAG,WAAlB;AACP,IAAaC,SAAS,GAAG,WAAzB;;ACCO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,MAAR,EAAmB;MAC3CC,KAD2C,GACZD,MADY,CAC3CC;MAAOxD,aADoC,GACZuD,MADY,CACpCvD;MAAelE,IADqB,GACZyH,MADY,CACrBzH;;UACtBA;SACDqH;;YACCM,kBAAkB,GAAGH,KAAK,GAAGtD;YAC3BY,QAAQ,GAAG4C,KAAK,IAAIC,kBAATD,GAA8BC,kBAA9BD,GAAmDA;eAC7D5C;;;SAGJwC;;YACCM,kBAAkB,GAAGJ,KAAK,GAAGtD;YAC3BW,QAAQ,GAAG+C,kBAAkB,IAAIF,KAAtBE,GAA8BA,kBAA9BA,GAAmDF;eAC7D7C;;;;aAIA2C;;AAhBN;;ACAA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACH,KAAD,EAAQxD,aAAR;SAA2B;IACvDlE,IAAI,EAAEqH,SADiD;IAEvDK,KAAK,EAALA,KAFuD;IAGvDxD,aAAa,EAAbA;EAHuD;AAAlD;;AAMP,IAAa4D,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,KAAD,EAAQxD,aAAR;SAA2B;IACvDlE,IAAI,EAAEsH,SADiD;IAEvDI,KAAK,EAALA,KAFuD;IAGvDxD,aAAa,EAAbA;EAHuD;AAAlD,CAAP;;;;;;;;;;;;ACHA,IAAM6D,SAAS,GAAG,gCAAlB;AACA,IAAMC,eAAe,GAAG,gCAAxB;AACA,IAAMC,gBAAgB,GAAG,iCAAzB;AAEA,IAAMC,GAAG,GAAGrI,MAAM,CAACC,MAAPD,CAAcE,KAAdF,CAAoB;uBAAGG;MAAAA,IAAH,0BAAU,QAAV;SAA0B;IAAEA,IAAI,EAAJA;EAAF;AAA9C,GAAHmI,mBAAGtI,EAMU;MAAGuI,MAAH,SAAGA;SACrBA,MAAM,GAAG,qBAAH,GAA2B;AAP5B,CAAGvI,EAYI;MAAGuI,MAAH,SAAGA;SAAcA,MAAM,GAAGJ,eAAH,GAAqBD;AAZnD,CAAGlI,EAkBM;MAAGuI,MAAH,SAAGA;SACfA,MAAM,GAAGJ,eAAH,GAAqBC;AAnBxB,CAAGpI,CAAZ;;IAuBMwI;;;;;;;;;;;;;;;;8DACM,YAAM;wBACUnF,MAAKhD;UAArBiD,OADM,eACNA;UAASC,EADH,eACGA;MACjBD,OAAO,CAACC,EAAD,CAAPD;;;;;;;;6BAEO;UACCiF,MADD,GACY,KAAKlI,KAAL,CAAXkI;0BAEN/E,oBAAC6E,GAAD;QACExC,QAAQ,EAAE0C,MAAM,GAAG,CAAC,CAAJ,GAAQ,CAD1B;QAEEjF,OAAO,EAAE,KAAKA,OAFhB;QAGEiF,MAAM,EAAEA,MAHV;QAIExH,SAAS,YAAK9B,SAAS,CAAC,KAAD,CAAd,cACPsJ,MAAM,GAAGtJ,SAAS,CAAC,YAAD,CAAZ,GAA6B,EAD5B;MAJX;;;;;CARAuJ,CAAqBhF,KAAK,CAACC,SAA3B+E;;AAoBNA,YAAY,CAACpH,SAAboH,GAAyB;EACvBjF,EAAE,EAAEjC,SAAS,CAACoC,SAAVpC,CAAoB,CAACA,SAAS,CAACqC,MAAX,EAAmBrC,SAAS,CAACsC,MAA7B,CAApBtC,CADmB;EAEvBiH,MAAM,EAAEjH,SAAS,CAACkF,IAFK;EAGvBlD,OAAO,EAAEhC,SAAS,CAACuC;AAHI,CAAzB2E;;;;;;;;;;;;AC9CA,IAAMC,UAAU,GAAGzI,MAAM,CAACa,GAAPb,CAAH0I,mBAAG1I,CAAnB;;IAMM2I;;;;;;;;;;;;;6BACK;wBACqC,KAAKtI;UAAzCuI,UADD,eACCA;UAAYC,UADb,eACaA;UAAYvF,OADzB,eACyBA;UAC1BwF,KAAK,GAAGjK,aAAa,CAAC+J,UAAD;0BAEzBpF,oBAACiF,UAAD;QAAY1H,SAAS,EAAE9B,SAAS,CAAC,YAAD;MAAhC,GACG6J,KAAK,CAAC1D,GAAN0D,CAAU,UAACC,IAAD,EAAOC,CAAP;4BACTxF,oBAAC6E,YAAD;UAAKtC,GAAG,EAAEiD,CAAV;UAAazF,EAAE,EAAEyF,CAAjB;UAAoBT,MAAM,EAAES,CAAC,KAAKH,UAAlC;UAA8CvF,OAAO,EAAEA;QAAvD;MADD,EADH;;;;;CALAqF,CAAmBnF,KAAK,CAACC,SAAzBkF;;AAcNA,UAAU,CAACzH,YAAXyH,GAA0B;EACxBrF,OAAO,EAAE1E;AADe,CAA1B+J;AAIAA,UAAU,CAACvH,SAAXuH,GAAuB;EACrBC,UAAU,EAAEtH,SAAS,CAACsC,MAAVtC,CAAiBE,UADR;EAErBqH,UAAU,EAAEvH,SAAS,CAACsC,MAAVtC,CAAiBE,UAFR;EAGrB8B,OAAO,EAAEhC,SAAS,CAACuC;AAHE,CAAvB8E;;ICZMM;;;;;;;;;;;;;;;;yEACiB;;4DACb;MACNC,UAAU,EAAE,CADN;MAENC,WAAW,EAAE,CAFP;MAGNlH,cAAc,EAAE,CAHV;MAIND,oBAAoB,EAAE,CAJhB;MAKND,SAAS,EAAE,KALL;MAMNqH,aAAa,EAAE,KANT;MAON/G,YAAY,EAAEgB,MAAKhD,KAAL,CAAWgC,YAPnB;MAQNgH,WAAW,EAAEhG,MAAKhD,KAAL,CAAWiJ,kBAAX,IAAiCjG,MAAKhD,KAAL,CAAWkJ,gBARnD;;MASNT,KAAK,EAAE,EATD;MAUND,UAAU,EAAE,CAVN;MAWNW,oBAAoB,EAAE;IAXhB;;6DA8EC,gBAAI;aAAI,eAAG;eAAKnG,MAAKoG,IAAL,IAAaC;MAAzB;;;yEAEQ,YAAM;YACpBC,KAAK,IAAIC,cAAJ,CAAmB,UAACC,OAAD,EAAUC,QAAV,EAAuB;mDAC9BD;;;;;gBAATE,KADuC;;gBAE5CA,KAAK,CAACC,MAAND,KAAiB1G,MAAK4G,iBAAiB;;;;cAIzCC,MAAM,CAACC,qBAAPD,CAA6B,YAAM;sBAC5BE,kBAAkBL;cADzB;;;gBAIEA,KAAK,CAACC,MAAND,KAAiB1G,MAAKgH,QAAQ;;;;cAIhCH,MAAM,CAACC,qBAAPD,CAA6B,YAAM;sBAC5BI,eAAeP;cADtB;;;;8DAbyB;;;;;;;;MADrB;;YAqBLJ,GAAGY,QAAQlH,MAAK4G;;YAChBN,GAAGY,QAAQlH,MAAKgH;;;0EAGD;aAAMhH,MAAKsG,EAAL,CAAQa,UAAR;;;kEAEd,YAAM;kCACQnH,MAAKoH,6BAAL;UAAlBC,aADU,yBACVA;;YACHC,qBAAqBC,WAAW,CAAC,YAAM;YACtCvH,MAAKwH,oBAAoB;cACnBzB,aADmB,GACD/F,MAAKsE,KAAL,CAAlByB;;cACJ,CAACA,eAAe;kBACb0B;;;MAJ0B,GAOlCJ,aAPkC;;;qEAUtB,YAAM;UACjBrH,MAAKsH,oBAAoB;QAC3BI,aAAa,CAAC1H,MAAKsH,kBAAN,CAAbI;cACKJ,qBAAqB;;;;+DAInB,YAAM;UACT/B,UAAU,GAAGvF,MAAK2H,aAAL;;UACblC,KAAK,GAAGjK,aAAa,CAAC+J,UAAD;;YACtBqC,SAAS;QAAEnC,KAAK,EAALA;MAAF;;;4EAGQ,cAAM;YACvBuB,OAAOa,iBAAiB,iBAAiBC;;;iFAGnB,cAAM;YAC5Bd,OAAOe,oBAAoB,iBAAiBD;;;oFAGnB,YAAM;wBACI9H,MAAKhD;UAArCgL,WAD4B,eAC5BA;UAAgBC,WADY;;UAE5B9B,oBAF4B,GAEHnG,MAAKsE,KAAL,CAAzB6B,qBAF4B;;UAKhC+B,kBALgC;;UAOhCF,WAAW,IAAIA,WAAW,CAACG,MAAZH,GAAqB,GAAG;QACzCE,iBAAiB,GAAGF,WAAW,CAC5BI,KADiBJ;QAAAA,CAEjBK,OAFiBL;QAAAA,CAGjBM,IAHiBN,CAGZ,cAAE;iBAAIO,EAAE,CAACjH,KAAHiH,IAAYpC;QAHN,EAApB+B;;YAII,CAACA,mBAAmB;;;;UAItBA,iBAAiB,GAAGF,WAAW,CAAC,CAAD,CAA/BE;;MAhBgC;;;+CAoBxBD,cAAgBC;;;2EAGP,YAAM;YACtBN,SAAS,iBAAS;qCAMjB5H,MAAKoH,6BAAL;YAJFpJ,QAFmB,0BAEnBA;YACAS,YAHmB,0BAGnBA;YACAsC,WAJmB,0BAInBA;YACA/B,YALmB,0BAKnBA;;YAEM8G,WAPa,GAOgBxB,KAPhB,CAObwB;YAAaE,WAPA,GAOgB1B,KAPhB,CAOA0B;;YAEftF,UAAU,GAAGV,MAAKwI,mBAAL;;YACbC,UAAU,GAAG3G,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqG;YACxCQ,WAAW,GAAGF,UAAU,GAAG1H;YAC7B6H,MAAM,GAAG5C,WAAW,GAAG,CAAC;YACtB6C,UAAU,GAAG9H,WAAW,IAAI0H,UAAU,GAAGzC,WAAjB;;YAC1B6C,UAAU,GAAG,CAAbA,IAAkBF,WAAW,GAAG,GAAG;UACrCC,MAAM,GAAGC,UAAU,GAAG7C,WAAW,GAAG,CAAC,CAArC4C;;;YAEEhK,cAAc,GAAG,CAACH,YAAY,GAAGqH,WAAH,GAAiBpF,UAA9B,IAA4CkI;YAC3DE,cAAc,GAClBD,UAAU,GAAG,CAAbA,GAAiB7C,WAAW,GAAG6C,UAA/BA,GAA4C7C,YAnBzB;;;;QAuBrBa,MAAM,CAACC,qBAAPD,CAA6B,YAAM;cAC7B7G,MAAKwH,oBAAoB;kBACtBI,SAAS;cAAE5I,YAAY,EAAZA;YAAF;;QAFlB;eAKO;UACLJ,cAAc,EAAdA,cADK;UAELoH,WAAW,EAAE8C,cAAc,GAAG,CAAjBA,GAAqB,CAArBA,GAAyBA;QAFjC;MA5BT;;;qEAmCe,sBAAc;UACzB,CAAC9I,MAAKwH,oBAAoB;;;;mCAQ1BxH,MAAKoH,6BAAL;UAHF3I,YAN2B,0BAM3BA;UACAT,QAP2B,0BAO3BA;UACA+C,WAR2B,0BAQ3BA;;UAEcgI,YAVa,GAUIC,UAAU,CAACC,WAAXD,CAAzBrJ;UACFuJ,SAAS,GAAG;UACZC,cAAc,GAAGrH,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqG;;UAC9C1J,cAAc;YACVqH,WAAW,GAAGiD,YAAY,GAAGI,eADnB;;;;QAKhBD,SAAS,CAACrD,UAAVqD,GACEpD,WAAW,GAAGsD,IAAI,CAACC,GAALD,CAASD,cAATC,EAAyBrI,WAAzBqI,CADhBF;QAEAA,SAAS,CAACpD,WAAVoD,GAAwBpD,WAAxBoD;MAPF,OAQO;QACLA,SAAS,CAACrD,UAAVqD,GAAuBH,YAAvBG;;;YAEGtB,SAASsB;;;0EAGM,YAAM;UAClB/C,oBADkB,GACOnG,MAAKsE,KAAL,CAAzB6B;;mCAMJnG,MAAKoH,6BAAL;UAJF3I,YAHwB,0BAGxBA;UACAsC,WAJwB,0BAIxBA;UACAuI,cALwB,0BAKxBA;UACAtL,QANwB,0BAMxBA;;;;;;UAMImL,cAAc,GAAGrH,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqG,MAA3BrG,IAAqC;UAExDpB,UAAU,GAAG;;UACbjC,cAAc;QAChBiC,UAAU,GAAGyF,oBAAbzF;MADF,OAEO;;;;;QAKLA,UAAU,GACRyF,oBAAoB,IACnBmD,cAAc,GAAGvI,WAAH,GAAiBqI,IAAI,CAACC,GAALD,CAASD,cAATC,EAAyBrI,WAAzBqI,CADZ,CADtB1I;;;aAIKA;;;wEAGW,+BAAuB;UAC1B6I,uBAD0B,GACEC,mBAAmB,CAACP,WAApBO,CAAnClI,MADiC;;;mCAOrCtB,MAAKoH,6BAAL;UAFF1H,YALuC,0BAKvCA;UACc+J,mBANyB,0BAMvChL;;UAEIiL,cAAc,GAClBH,uBAAuB,IAAIE,mBAAmB,GAAG,CAAH,GAAO/J,YAAY,GAAG,CAA7C;;UAGvB,CAACM,MAAKwH,kBAAN,IACAxH,MAAKsE,KAAL,CAAW6B,oBAAX,KAAoCoD,yBACpC;;;;;YAIG3B,SACH;QAAEzB,oBAAoB,EAAEuD,cAAxB;QAAwC1K,YAAY,EAAE;MAAtD,GACA,YAAM;;qCAMAgB,MAAKoH,6BAAL;YAHFuC,QAHE,0BAGFA;YACA5I,WAJE,0BAIFA;YACA/C,QALE,0BAKFA;;YAGImL,cAAc,GAAGrH,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqG,MAA3BrG,IAAqC;;cAEvD8F,SACH,wBAAgB;;;;cAIV5B,WAAW,GAAG4D,YAAY,CAAC5D,YAJjB;;cAMR6D,cAAc,GAAGT,IAAI,CAACC,GAALD,CAASD,cAATC,EAAyBrI,WAAzBqI;cACjBU,QAAQ,GAAGX,cAAc,GAAGU;;cAC9B7D,WAAW,GAAG8D,UAAU;YAC1B9D,WAAW,GAAG8D,QAAd9D;;;iBAGK;YAAEA,WAAW,EAAXA;UAAF;QAbX,GAeE,YAAM;;;;;;gBAMC+D;;cACC7B,iBAAiB,GAAGlI,MAAKoH,6BAAL;;UAC1BuC,QAAQ,CAACzB,iBAAD,CAARyB;QAvBJ;MAZJ;;;mEA0Ca,UAACK,QAAD,EAA6C;UAAlCC,QAAkC,uEAAvB;UAAI9K,QAAmB,uEAAR;;YAC7CyI,SAAS,iBAAS;eACd;UACLlJ,SAAS,EAAE,IADN;UAELC,oBAAoB,EAAEqL,QAAQ,GAAGC;QAF5B;MADT;;MAMAC,UAAU,CAAC,YAAM;cACVtC,SAAS;UACZlJ,SAAS,EAAE,KADC;UAEZC,oBAAoB,EAAE;QAFV;MADN,GAKPQ,QALO,CAAV+K;;;0EAQoB,iBAAS;mCACRlK,MAAKoH,6BAAL;UAAbpJ,QADqB,0BACrBA,SADqB;;;UAGvBmM,UAAU,GAAGf,IAAI,CAACgB,KAALhB,CAAWiB,KAAXjB;UACbpH,KAAK,GAAGF,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqI,UAA3BrI;aACP;QAAE4D,IAAI,EAAE1D,KAAK,CAAChF,KAAd;QAAqBqN,KAAK,EAAEF;MAA5B;;;uEAGU,UAACG,YAAD,EAAeC,OAAf,EAA2B;mCAKxCvK,MAAKoH,6BAAL;UAHFpJ,QAF0C,0BAE1CA;UACA+C,WAH0C,0BAG1CA;UACAC,aAJ0C,0BAI1CA;;UAEImI,cAAc,GAAGrH,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqG,MAA3BrG,IAAqC;UACtD0I,oBAAoB,GAAGzJ,WAAW,GAAGoI;UACvC3E,KAAK,GAAG+F,OAAO,GAAG,CAAH,GAAOpB,cAAc,GAAGpI;;UAEvCyJ,sBAAsB;QACxBhG,KAAK,GAAG,CAARA,CADwB;;;UAGpBiG,UAAU,GAAGF,OAAO,GACtB3F,cAAc,CAAC,CAAD,EAAI5D,aAAJ,CADQ,GAEtB2D,cAAc,CAACH,KAAD,EAAQxD,aAAR;UACZY,QAAQ,GAAGyC,kBAAkB,CAACiG,YAAD,EAAeG,UAAf;aAC5B7I;;;qEAGQ,mBAAW;mCACL5B,MAAKoH,6BAAL;UAAbpJ,QADkB,0BAClBA;;UACAgI,WAFkB,GAEFhG,MAAKsE,KAAL,CAAhB0B;;UACF0E,aAAa,GAAG1K,MAAK2K,gBAAL,CAAsB3E,WAAtB,EAAmCuE,OAAnC,EAHI;;;UAKpBJ,UAAU,GAAGf,IAAI,CAACgB,KAALhB,CAAWsB,aAAXtB;UACbwB,SAAS,GAAG9I,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqI,UAA3BrI;UACZ+I,KAAK,GAAG;QAAEnF,IAAI,EAAEkF,SAAS,CAAC5N,KAAlB;QAAyBqN,KAAK,EAAEF;MAAhC;aACPU;;;iEAGI,YAAM;YACZjD,SAAS;QACZjJ,oBAAoB,EAAE,CADV;QAEZoH,aAAa,EAAE,KAFH;QAGZrH,SAAS,EAAE;MAHC;;;gEAOJ,gBAAQ;UACVoM,MADU,GAC0BC,IAD1B,CACVD;UAAQE,IADE,GAC0BD,IAD1B,CACFC;UAAMC,MADJ,GAC0BF,IAD1B,CACIE;UAAQC,IADZ,GAC0BH,IAD1B,CACYG;UAAMC,GADlB,GAC0BJ,IAD1B,CACkBI;;YAE/BvD,SAAS,iBAAS;YACb9B,WADa,GACgCxB,KADhC,CACbwB;YAAaE,WADA,GACgC1B,KADhC,CACA0B;YAAapH,cADb,GACgC0F,KADhC,CACa1F;;sCAM9BoB,MAAKoH,6BAAL;YAJFrG,WAHmB,2BAGnBA;YACAtC,YAJmB,2BAInBA;YACAT,QALmB,2BAKnBA;YACAQ,KANmB,2BAMnBA;;YAGIkC,UAAU,GAAGV,MAAKwI,mBAAL,GATE;;;YAYfW,cAAc,GAAGrH,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqG,MAA3BrG,IAAqC;YACtDsJ,SAAS,GACZ,CAAC3M,YAAD,IAAiB0M,GAAG,KAAK,MAAzB,IAAmC,CAAC3M,KAApC,IACA,CAACC,YAAD,IAAiB0M,GAAG,KAAK,OAAzB,IAAoC3M,KADpC,IAEAC,YAAY,IAAI0M,GAAG,KAAK;YACrBE,SAAS,GACZ,CAAC5M,YAAD,IAAiB0M,GAAG,KAAK,OAAzB,IAAoC,CAAC3M,KAArC,IACA,CAACC,YAAD,IAAiB0M,GAAG,KAAK,MAAzB,IAAmC3M,KADnC,IAEAC,YAAY,IAAI0M,GAAG,KAAK;YAErBG,eAAe,GAAGH,GAAG,KAAK,MAARA,IAAkBA,GAAG,KAAK;YAC5CI,aAAa,GAAGJ,GAAG,KAAK,IAARA,IAAgBA,GAAG,KAAK;YACxCK,cAAc,GAAG,CAAC/M;YAEpBgN,aAAa,GAAG;YACdC,sBAAsB,GAAGhL,UAAU,GAAG;YACtCiL,oBAAoB,GAAG7F,WAAW,GAAG;;YAEvCrH,cAAc;cACZ8M,eAAe;gBACXK,SAAS,GAAGzC,cAAc,GAAGrD;;gBAC/BsF,WAAW;cACbK,aAAa,GACXG,SAAS,GACT9F,WAAW,GAAGE,WADd4F,GAEA7K,WAAW,GAAG+E,WAFd8F,GAGAD,oBAJFF;YADF,OAMO,IAAIJ,SAAJ,EAAe;cACpBI,aAAa,GAAG3F,WAAW,GAAGE,WAAdF,GAA4B6F,oBAA5CF;;;QAVN,OAaO;cACDH,iBAAiB;gBACbM,UAAS,GAAGzC,cAAc,GAAGzI;;gBAC/B0K,WAAW;cACbK,aAAa,GACXG,UAAS,GACTlL,UAAU,GAAGsF,WADb4F,GAEA7K,WAAW,GAAGL,UAFdkL,GAGAF,sBAJFD;YADF,OAMO,IAAIJ,SAAJ,EAAe;cACpBI,aAAa,GAAG/K,UAAU,GAAGsF,WAAbtF,GAA2BgL,sBAA3CD;;;;;YAKAI,0BAA0B,GAC7BL,cAAc,IAAID,aAAlBC,IACAA,cAAc,IAAIF,eAAlBE,IAAqCR,IAAI,GAAGS;YAEzCK,wBAAwB,GAC3BrN,YAAY,IAAI6M,eAAhB7M,IACAA,YAAY,IAAI8M,aAAhB9M,IAAiCyM,IAAI,GAAGO;;YAEvCI,0BAA0B,IAAIC,0BAA0B;;;;;YAIxDnN;;YACA2M,iBAAiB;cACf9M,OAAO;YACTG,oBAAoB,GAAGC,cAAc,GAAGkM,MAAxCnM;UADF,OAEO;YACLA,oBAAoB,GAAGC,cAAc,GAAGkM,MAAxCnM;;QAJJ,OAMO;UACLA,oBAAoB,GAAGC,cAAc,GAAGqM,MAAxCtM;;;eAEK;UACLA,oBAAoB,EAApBA,oBADK;UAELD,SAAS,EAAE,IAFN;UAGLqH,aAAa,EAAE;QAHV;MAhFT;;;+DAwFS,gBAAQ;;;;;UAMTiF,IANS,GAMWD,IANX,CAMTC;UAAME,IANG,GAMWH,IANX,CAMHG;UAAMC,GANH,GAMWJ,IANX,CAMGI;wBACiBnL,MAAKsE;UAAlCwB,WAPS,eAOTA;UAAaE,WAPJ,eAOIA;;oCAKjBhG,MAAKoH,6BAAL;UAHF3I,YATe,2BASfA;UACAD,KAVe,2BAUfA;UACAwC,aAXe,2BAWfA;;UAEIN,UAAU,GAAGV,MAAKwI,mBAAL;;UAEfhI,IAAI,GAAGR,MAAK+L;UACVC,0BAA0B,GAAGtL,UAAU,GAAG;UAC1CuL,wBAAwB,GAAGnG,WAAW,GAAG;UACzCoG,UAAU,GAAGf,GAAG,KAAK;UACrBgB,WAAW,GAAGhB,GAAG,KAAK;UACtBiB,QAAQ,GAAGjB,GAAG,KAAK;UACnBkB,UAAU,GAAGlB,GAAG,KAAK;UACrBmB,eAAe,GACnB7N,YAAY,KACX2N,QAAQ,IAAIC,UADD,CAAZ5N,IAEAyM,IAAI,GAAGe;UAEHM,iBAAiB,GACrB,CAAC9N,YAAD,KACC0N,WAAW,IAAID,UADhB,KAEAlB,IAAI,GAAGgB;UAELQ,QAAQ,GAAG;;UACXF,eAAe,IAAIC,mBAAmB;QACxCC,QAAQ,GAAG,IAAXA;;;UAGEA,UAAU;;;YAIR/N,cAAc;;cAEVgO,sBAAsB,GAAGrD,IAAI,CAACsD,IAALtD,CAC7B,CAAC8B,IAAI,GAAGe,wBAAR,IAAoCnG,WADPsD,EAFf;;cAMVuD,kBAAkB,GAAGvD,IAAI,CAACwD,GAALxD,CACzBpI,aADyBoI,EAEzBqD,sBAFyBrD;cAKrByD,cAAc,GAAG7G,WAAW,GAAG2G;cAC/BG,iBAAiB,GAAG9G,WAAW,GAAG2G,mBAZxB;;cAeZN,YAAY;;YAEd7L,IAAI,GAAG;qBAAMR,MAAK+M,IAAL,CAAUF,cAAV;YAAb;;;cAEET,UAAU;;YAEZ5L,IAAI,GAAG;qBAAMR,MAAK+M,IAAL,CAAUD,iBAAV;YAAb;;QArBJ,OAuBO;;cAECL,uBAAsB,GAAGrD,IAAI,CAACsD,IAALtD,CAC7B,CAAC4B,IAAI,GAAGgB,0BAAR,IAAsCtL,UADT0I,EAF1B;;;cAMCuD,mBAAkB,GAAGvD,IAAI,CAACwD,GAALxD,CACzBpI,aADyBoI,EAEzBqD,uBAFyBrD;;cAKrByD,eAAc,GAAG7G,WAAW,GAAG2G;;cAC/BG,kBAAiB,GAAG9G,WAAW,GAAG2G,oBAZnC;;;cAeDnO,OAAO;;gBAEL0N,YAAY;;cAEd1L,IAAI,GAAG;uBAAMR,MAAK+M,IAAL,CAAUF,eAAV;cAAb;;;gBAEEV,aAAa;;cAEf3L,IAAI,GAAG;uBAAMR,MAAK+M,IAAL,CAAUD,kBAAV;cAAb;;UARJ,OAUO;;gBAEDZ,YAAY;;cAEd1L,IAAI,GAAG;uBAAMR,MAAK+M,IAAL,CAAUD,kBAAV;cAAb;;;gBAEEX,aAAa;;cAEf3L,IAAI,GAAG;uBAAMR,MAAK+M,IAAL,CAAUF,eAAV;cAAb;;;;MAjGS;;;;YAwGZjF,SAAS;QAAElJ,SAAS,EAAE,KAAb;QAAoBqH,aAAa,EAAE;MAAnC;;MACdvF,IAAI,CAAC;QAAEwM,QAAQ,EAAE;MAAZ,CAAD,CAAJxM;;;kEAGY,mBAAW;oCACCR,MAAKoH,6BAAL;UAAhB6F,WADe,2BACfA;;UACAjH,WAFe,GAEChG,MAAKsE,KAAL,CAAhB0B;;UACFkH,WAAW,GAAGlN,MAAKmN,cAAL;;UACdC,WAAW,GAAGpN,MAAKqN,mBAAL,CAAyBrH,WAAzB;;MACpBiH,WAAW,CAACG,WAAD,EAAcF,WAAd,CAAXD;;YACKxF,UAAU6F;;;kEAGH,mBAAW;oCACCtN,MAAKoH,6BAAL;UAAhBmG,WADe,2BACfA;;UACAvH,WAFe,GAEChG,MAAKsE,KAAL,CAAhB0B;;UACFkH,WAAW,GAAGlN,MAAKmN,cAAL,CAAoB,IAApB;;UACdC,WAAW,GAAGpN,MAAKqN,mBAAL,CAAyBrH,WAAzB;;MACpBuH,WAAW,CAACH,WAAD,EAAcF,WAAd,CAAXK;;YACKC,UAAUF;;;gEAGL,YAAkB;UAAjBA,OAAiB,uEAAP;UACbN,QADoB,GACPM,OADO,CACpBN;;oCACehN,MAAKoH,6BAAL;UAAfqG,UAFoB,2BAEpBA;;yBACgCzN,MAAKsE;UAArC0B,WAHoB,gBAGpBA;UAAapH,cAHO,gBAGPA;;UACfgD,QAAQ,GAAG5B,MAAK2K,gBAAL,CAAsB3E,WAAtB,EAAmC,KAAnC;;UACbA,WAAW,KAAKpE,UAAU;cACvBmL,KAAKnL;MADZ,OAEO,IAAI6L,UAAU,IAAI,CAACT,QAAnB,EAA6B;cAC7BU,aAAa9O,gBAAgB,IAAI;;;;gEAI9B,YAAkB;UAAjB0O,OAAiB,uEAAP;UACbN,QADoB,GACPM,OADO,CACpBN;UACAhH,WAFoB,GAEJhG,MAAKsE,KAAL,CAAhB0B;;oCACehG,MAAKoH,6BAAL;UAAfqG,UAHoB,2BAGpBA;;UACF9L,QAAQ,GAAG3B,MAAK2K,gBAAL,CAAsB3E,WAAtB,EAAmC,IAAnC;;UACbA,WAAW,KAAKrE,UAAU;cACvBoL,KAAKpL;MADZ,OAEO,IAAI8L,UAAU,IAAI,CAACT,QAAnB,EAA6B;cAC7BU,aAAa,GAAG,CAAC,IAAI;;;;gEAIlB,YAAM;oCACgB1N,MAAKoH,6BAAL;UAAxBuG,SADQ,2BACRA;UAAWC,QADH,2BACGA;;yBACiB5N,MAAKsE;UAAjC0B,WAFQ,gBAERA;UAAaR,UAFL,gBAEKA;;UACf0H,WAAW,GAAGlN,MAAKqN,mBAAL,CAAyBrH,WAAzB;;YACf6H,2BAA2B7N,MAAK2N;;YAChC/F,SAAS;QAAE7B,aAAa,EAAE;MAAjB;;MACd6H,QAAQ,IAAIA,QAAQ,CAACV,WAAD,EAAc1H,UAAd,CAApBoI;MACAD,SAAS,CAACT,WAAD,EAAc1H,UAAd,CAATmI;;;gEAGU,YAAM;oCACgB3N,MAAKoH,6BAAL;UAAxB0G,SADQ,2BACRA;UAAWF,QADH,2BACGA;;yBACiB5N,MAAKsE;UAAjC0B,WAFQ,gBAERA;UAAaR,UAFL,gBAEKA;;UACf0H,WAAW,GAAGlN,MAAKqN,mBAAL,CAAyBrH,WAAzB;;YACf6H,2BAA2B7N,MAAK8N;;YAChClG,SAAS;QAAE7B,aAAa,EAAE;MAAjB;;MACd6H,QAAQ,IAAIA,QAAQ,CAACV,WAAD,EAAc1H,UAAd,CAApBoI;MACAE,SAAS,CAACZ,WAAD,EAAc1H,UAAd,CAATsI;;;8EAGwB,UACxBpK,SADwB,EAExBqK,UAFwB,EAGxBtP,YAHwB,EAIxBqF,IAJwB;aAKrB,iBAAS;YACJlF,cADI,GACyC0F,KADzC,CACJ1F;YAAgBkH,WADZ,GACyCxB,KADzC,CACYwB;YAAaE,WADzB,GACyC1B,KADzC,CACyB0B;;YAC/BtF,UAAU,GAAGV,MAAKwI,mBAAL;;YAEfwF,iBAAiB,GAAG;YAClBC,SAAS,GAAGxP,YAAY,GAAGqH,WAAH,GAAiBpF;;YAC3CgD,SAAS,KAAK5F,MAAM,CAACX,MAAM;UAC7B6Q,iBAAiB,GACfpP,cAAc,GAAGqP,SAAS,IAAIF,UAAU,GAAG/H,WAAjB,CAD5BgI;QADF,OAGO;UACLA,iBAAiB,GACfpP,cAAc,GAAGqP,SAAS,IAAIjI,WAAW,GAAG+H,UAAlB,CAD5BC;;;;UAKApP,cAAc,EAAEoP;UAChBhI,WAAW,EAAE+H;UACbpP,oBAAoB,EAAE;UACtBD,SAAS,EAAE;WACRoF;MAxBmB;;;2DA4BnB,sBAAc;oCAKf9D,MAAKoH,6BAAL;UAHFpJ,QAFiB,2BAEjBA;UACAS,YAHiB,2BAGjBA;UACAsC,WAJiB,2BAIjBA;;UAEMiF,WANW,GAMKhG,MAAKsE,KAAL,CAAhB0B;UACFmD,cAAc,GAAGrH,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqG;UAC9C+F,cAAc,GAAG9E,IAAI,CAACwD,GAALxD,CAAS,CAATA,EAAY2E,UAAZ3E,EARF;;UASb+E,MAAM,GAAGnI,WAAW,GAAGkI;;UACvBE,iBAAiB,GAAGpO,MAAK2K,gBAAL,CAAsB3E,WAAtB,EAAmCmI,MAAnC;;UACpBE,QAAQ,GAAGD,iBAAiB,KAAKpI;UACjCsI,aAAa,GAAGJ,cAAc,GAAGnN,WAAjBmN,IAAgC/E;;UAClDkF,UAAU;;;;UAGVC,eAAe;;QAEjBJ,cAAc,GAAG9E,IAAI,CAACwD,GAALxD,CAAS,CAATA,EAAYD,cAAc,GAAGpI,WAA7BqI,CAAjB8E;;;UAEExK,SAAS,GAAG5F,MAAM,CAACX;UACnBoR,aAAa,GAAGvO,MAAK2N;;UACrBQ,QAAQ;QACVzK,SAAS,GAAG5F,MAAM,CAACZ,IAAnBwG;QACA6K,aAAa,GAAGvO,MAAK8N,SAArBS;;;UAEIC,YAAY,GAAGxO,MAAKyO,uBAAL,CACnB/K,SADmB,EAEnBwK,cAFmB,EAGnBzP,YAHmB,EAInB;QACEsH,aAAa,EAAE;MADjB,CAJmB;;YAQhB6B,SAAS4G,cAAc,YAAM;;QAEhClS,IAAI,CACF0D,MAAK0O,gBAAL,EADE,EAEF1O,MAAK2O,qBAAL,CAA2BJ,aAA3B,CAFE,CAAJjS;MAFF;;;oEASc,YAAM;oCACc0D,MAAKoH,6BAAL;UAA1BpJ,QADY,2BACZA;UAAU+C,WADE,2BACFA;;UACZoI,cAAc,GAAGrH,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqG;UAC5CyG,eAAe,GAAGxF,IAAI,CAACwD,GAALxD,CAASrI,WAATqI,EAAsB,CAAtBA;UAClB7D,UAAU,GAAG6D,IAAI,CAACsD,IAALtD,CAAUD,cAAc,GAAGyF,eAA3BxF;aACZ7D,UAAU,IAAI;;;uEAGJ,YAAM;YAClBqC,SAAS,iBAAS;sCACa5H,MAAKoH,6BAAL;YAA1BrG,WADa,2BACbA;YAAa/C,QADA,2BACAA;;YACbgI,WAFa,GAEe1B,KAFf,CAEb0B;YAAaR,UAFA,GAEelB,KAFf,CAEAkB;;YACfD,UAAU,GAAGvF,MAAK2H,aAAL;;YACbwB,cAAc,GAAGrH,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqG;YAC5C0G,kBAAkB,GAAGzF,IAAI,CAACC,GAALD,CAASD,cAATC,EAAyBrI,WAAzBqI,EALN;;YAOfwF,eAAe,GAAGxF,IAAI,CAACwD,GAALxD,CAASyF,kBAATzF,EAA6B,CAA7BA;YAClB0F,aAAa,GAAG1F,IAAI,CAACsD,IAALtD,CAAUpD,WAAW,GAAG4I,eAAxBxF;YAChB2F,sBAAsB,GAAG3F,IAAI,CAACC,GAALD,CAAS7D,UAAU,GAAG,CAAtB6D,EAAyB0F,aAAzB1F;;YAC3B5D,UAAU,KAAKuJ,wBAAwB;iBAClC;YAAEvJ,UAAU,EAAEuJ;UAAd;;MAXX;;;uEAgBiB,uBAAe;oCACR/O,MAAKoH,6BAAL;UAAhBrG,WADwB,2BACxBA;;UACFiO,SAAS,GAAGC,WAAW,GAAGlO;;YAC3B6G,SAAS;QAAEpC,UAAU,EAAEyJ;MAAd;;YACTlC,KAAKiC;;;;;;;;wCArtBQ;WACbxH,qBAAqB;WACrB0H;WACAR;WACAS;;;;uCAGYC,WAAWC,WAAW;yBAOnC,KAAKrS;UALPsS,cAFqC,gBAErCA;UACAtR,QAHqC,gBAGrCA;UACA+C,WAJqC,gBAIrCA;UACAC,aALqC,gBAKrCA;UACAgH,WANqC,gBAMrCA;yBAE4C,KAAK1D;UAA3C0B,WAR+B,gBAQ/BA;UAAaG,oBARkB,gBAQlBA;UACfvE,QAAQ,GAAG,KAAK+I,gBAAL,CAAsB3E,WAAtB,EAAmC,KAAnC;UACXuJ,qBAAqB,GAAGzN,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,EAA2BqG;UACnDqH,kBAAkB,GAAG1N,QAAQ,CAAC4G,OAAT5G,CAAiBsN,SAAS,CAACpR,QAA3B8D,EAAqCqG,OAXzB;;UAcrCqH,kBAAkB,KAAKD,qBAAvBC,IACAJ,SAAS,CAACrO,WAAVqO,KAA0BrO,WAD1ByO,IAEAJ,SAAS,CAACpO,aAAVoO,KAA4BpO,aAF5BwO,IAGAJ,SAAS,CAACpH,WAAVoH,KAA0BpH,WAH1BwH,IAIArJ,oBAAoB,KAAKkJ,SAAS,CAAClJ,sBACnC;;aAEKY,kBAAkB;UAAEkC,WAAW,EAAE;YAAE3H,KAAK,EAAE6E;UAAT;QAAf;aAClBgJ;aACAT;MAvBgC;;;UA2BnC1I,WAAW,KAAKpE,UAAU;aACvB6N;MADP,OAEO,IAAIH,cAAc,IAAI,CAAC,KAAKhI,kBAA5B,EAAgD;aAChDoI;MADA,OAEA,IAAI,CAACJ,cAAD,IAAmB,KAAKhI,kBAA5B,EAAgD;aAChDmI;;;UAGHD,kBAAkB,KAAKD,uBAAuB;sCAG5C,KAAKnI,6BAAL;YADWuI,qBAFiC,2BAE9C5O,YAF8C;;;;;YAO1C6O,SAAS,GAAGL,qBAAqB,GAAG;YACpCM,YAAY,GAAG7J,WAAW,GAAG2J,qBAAd3J,GAAsC4J;;YACvDC,cAAc;;eAEX9C,KAAK3D,IAAI,CAACwD,GAALxD,CAAS,CAATA,EAAYmG,qBAAqB,GAAGI,qBAApCvG;;;;;;2CAKO;WAChB5B,qBAAqB;WACrBiI;WACAK;;;;6BA2pBE;yBAUH,KAAKxL;UARPkB,UAFK,gBAELA;UACA9G,SAHK,gBAGLA;UACAE,cAJK,gBAILA;UACAD,oBALK,gBAKLA;UACAkH,UANK,gBAMLA;UACAJ,KAPK,gBAOLA;UACAO,WARK,gBAQLA;UACAhH,YATK,gBASLA;;oCAyBE,KAAKoI,6BAAL;UAtBF1J,SAZK,2BAYLA;UACAD,KAbK,2BAaLA;UACAsD,WAdK,2BAcLA;UACAC,aAfK,2BAeLA;UACAvC,YAhBK,2BAgBLA;UACAD,KAjBK,2BAiBLA;UACAS,MAlBK,2BAkBLA;UACAC,UAnBK,2BAmBLA;UACAlB,QApBK,2BAoBLA;UACA+R,aArBK,2BAqBLA;UACApP,wBAtBK,2BAsBLA;UACA/C,YAvBK,2BAuBLA;UACAsD,WAxBK,2BAwBLA;UACAxB,YAzBK,2BAyBLA;UACAkB,WA1BK,2BA0BLA;UACAC,gBA3BK,2BA2BLA;UACAmP,UA5BK,2BA4BLA;UACAC,UA7BK,2BA6BLA;UACAC,kBA9BK,2BA8BLA;UACApP,4BA/BK,2BA+BLA;UACAqP,WAhCK,2BAgCLA;UACAC,gBAjCK,2BAiCLA;;UAGI1P,UAAU,GAAG,KAAK8H,mBAAL;UAEbjD,UAAU,GAAG,KAAKoC,aAAL;;;UAGb0I,YAAY,GAChBrK,WAAW,KAAK,KAAK2E,gBAAL,CAAsB3E,WAAtB,EAAmC,IAAnC;UACZsK,YAAY,GAChBtK,WAAW,KAAK,KAAK2E,gBAAL,CAAsB3E,WAAtB,EAAmC,KAAnC;UACZuK,iBAAiB,GAAG,CAACF,YAAD,IAAiBH;UACrCM,iBAAiB,GAAG,CAACF,YAAD,IAAiBJ;0BAGzC/P,oBAACsQ,eAAD;QACEjS,KAAK,EAAEA,KADT;QAEEd,SAAS,YAAK9B,SAAS,CAAC,kBAAD,CAAd,cAAsC8B,SAAtC,CAFX;QAGED,KAAK,EAAEA;MAHT,gBAKE0C,oBAACuQ,cAAD;QACEhT,SAAS,EAAE9B,SAAS,CAAC,UAAD,CADtB;QAEEgE,IAAI,EAAE;UAAED,MAAM,EAAEkG;QAAV;MAFR,gBAIE1F,oBAACwQ,IAAD;QAAMC,IAAI,EAAEX;MAAZ,GACGE,WAAW,GACVA,WAAW,CAAC;QACVrT,IAAI,EAAEgB,MAAM,CAACZ,IADH;QAEV+C,OAAO,EAAE,KAAKsN,WAFJ;QAGVsD,MAAM,EAAE,CAACR;MAHC,CAAD,CADD,gBAOVlQ,oBAACwD,KAAD;QACE1D,OAAO,EAAE,KAAKsN,WADhB;QAEE7J,SAAS,EAAEjF,YAAY,GAAGkF,KAAK,CAACN,EAAT,GAAcM,KAAK,CAACrE,IAF7C;QAGErC,QAAQ,EAAEsT;MAHZ,EARJ,CAJF,eAmBEpQ,oBAAC2Q,eAAD;QACEpT,SAAS,EAAE9B,SAAS,CAAC,kBAAD,CADtB;QAEEyK,GAAG,EAAE,KAAK0K,MAAL,CAAY,iBAAZ;MAFP,gBAIE5Q,oBAAC6Q,MAAD;QACEvS,YAAY,EAAEA,YADhB;QAEED,KAAK,EAAEA,KAFT;QAGES,MAAM,EAAEA,MAHV;QAIEL,cAAc,EAAEA,cAJlB;QAKED,oBAAoB,EAAEA,oBALxB;QAMED,SAAS,EAAEA,SANb;QAOEM,YAAY,EAAEA,YAPhB;QAQEE,UAAU,EAAEA,UARd;QASExB,SAAS,EAAE9B,SAAS,CAAC,QAAD,CATtB;QAUEyK,GAAG,EAAE,KAAK0K,MAAL,CAAY,QAAZ,CAVP;QAWErR,YAAY,EAAEA;MAXhB,gBAaES,oBAACM,KAAD;QACEhC,YAAY,EAAEA,YADhB;QAEET,QAAQ,EAAE8D,QAAQ,CAAC4G,OAAT5G,CAAiB9D,QAAjB8D,CAFZ;QAGEpB,UAAU,EAAEA,UAHd;QAIEO,WAAW,EAAE+E,WAJf;QAKErF,wBAAwB,EAAEA,wBAL5B;QAMEI,WAAW,EAAEA,WANf;QAOEC,aAAa,EAAEA,aAPjB;QAQEpD,YAAY,EAAEA,YARhB;QASEsD,WAAW,EAAEA,WATf;QAUEN,WAAW,EAAEA,WAVf;QAWEC,gBAAgB,EAAEA,gBAXpB;QAYEC,4BAA4B,EAAEA,4BAZhC;QAaEK,QAAQ,EAAE,KAAKA,QAbjB;QAcEC,SAAS,EAAE,KAAKA,SAdlB;QAeEC,WAAW,EAAE0O,aAAa,GAAG,KAAKhD,IAAR,GAAekE;MAf3C,EAbF,CAJF,CAnBF,eAuDE9Q,oBAACwQ,IAAD;QAAMC,IAAI,EAAEX;MAAZ,GACGE,WAAW,GACVA,WAAW,CAAC;QACVrT,IAAI,EAAEgB,MAAM,CAACX,IADH;QAEV8C,OAAO,EAAE,KAAKgN,WAFJ;QAGV4D,MAAM,EAAE,CAACP;MAHC,CAAD,CADD,gBAOVnQ,oBAACwD,KAAD;QACE1D,OAAO,EAAE,KAAKgN,WADhB;QAEEvJ,SAAS,EAAEjF,YAAY,GAAGkF,KAAK,CAACL,IAAT,GAAgBK,KAAK,CAACpE,KAF/C;QAGEtC,QAAQ,EAAEuT;MAHZ,EARJ,CAvDF,CALF,eA4EErQ,oBAACwQ,IAAD;QAAMC,IAAI,EAAEZ;MAAZ,GACGI,gBAAgB,GACfA,gBAAgB,CAAC;QACf3K,KAAK,EAAEA,KADQ;QAEfD,UAAU,EAAVA,UAFe;QAGfvF,OAAO,EAAE,KAAKiR;MAHC,CAAD,CADD,gBAOf/Q,oBAACmF,UAAD;QACEC,UAAU,EAAEA,UADd;QAEEC,UAAU,EAAEA,UAFd;QAGEvF,OAAO,EAAE,KAAKiR;MAHhB,EARJ,CA5EF;;;;;CAzxBAtL,CAAiBzF,KAAK,CAACC,SAAvBwF;;AAy3BNA,QAAQ,CAAC/H,YAAT+H,GAAwB;EACtBlI,SAAS,EAAE,EADW;EAEtBD,KAAK,EAAE,EAFe;EAGtBgB,YAAY,EAAE,KAHQ;EAItBD,KAAK,EAAE,KAJe;EAKtB0H,gBAAgB,EAAE,CALI;EAMtBD,kBAAkB,EAAE,CANE;EAOtBgK,UAAU,EAAE,IAPU;EAQtB3G,cAAc,EAAE,KARM;EAStB4G,kBAAkB,EAAE,IATE;EAUtBF,UAAU,EAAE,IAVU;EAWtB/Q,MAAM,EAAE,MAXc;EAYtBC,UAAU,EAAE,MAZU;EAatBF,YAAY,EAAE,GAbQ;EActByO,UAAU,EAAE,IAdU;EAetB7M,WAAW,EAAE,IAfS;EAgBtBC,gBAAgB,EAAE,IAhBI;EAiBtBC,4BAA4B,EAAE,KAjBR;EAkBtBiP,aAAa,EAAE,KAlBO;EAmBtBpP,wBAAwB,EAAE,IAnBJ;EAoBtBI,WAAW,EAAE,CApBS;EAqBtBC,aAAa,EAAE,CArBO;EAsBtBpD,YAAY,EAAEE,MAAM,CAACT,MAtBC;EAuBtB6D,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAvBS;EAwBtBxB,YAAY,EAAE,CAxBQ;EAyBtB4P,cAAc,EAAE,KAzBM;EA0BtBjI,aAAa,EAAE,IA1BO;;EA6BtBuG,QAAQ,EAAErS,IA7BY;EA8BtBoS,SAAS,EAAEpS,IA9BW;EA+BtBuS,SAAS,EAAEvS,IA/BW;EAgCtB0R,WAAW,EAAE1R,IAhCS;EAiCtBgS,WAAW,EAAEhS,IAjCS;EAkCtBoO,QAAQ,EAAEpO;AAlCY,CAAxBqK;AAqCAA,QAAQ,CAAC7H,SAAT6H,GAAqB;;EAEnB5H,QAAQ,EAAEC,SAAS,CAACkT,IAAVlT,CAAeE,UAFN;;;EAKnBT,SAAS,EAAEO,SAAS,CAACqC,MALF;;;EAQnB7C,KAAK,EAAEQ,SAAS,CAACG,MARE;;;EAWnBK,YAAY,EAAER,SAAS,CAACkF,IAXL;;;EAcnB3E,KAAK,EAAEP,SAAS,CAACkF,IAdE;;;EAiBnB6M,UAAU,EAAE/R,SAAS,CAACkF,IAjBH;;;EAoBnBnE,YAAY,EAAEf,SAAS,CAACsC,MApBL;;;EAuBnBtB,MAAM,EAAEhB,SAAS,CAACqC,MAvBC;;;EA0BnBpB,UAAU,EAAEjB,SAAS,CAACqC,MA1BH;;;EA6BnBmN,UAAU,EAAExP,SAAS,CAACkF,IA7BH;;;EAgCnBpC,WAAW,EAAE9C,SAAS,CAACsC,MAhCJ;;;EAmCnBS,aAAa,EAAE/C,SAAS,CAACsC,MAnCN;;;EAsCnByH,WAAW,EAAE/J,SAAS,CAACmT,OAAVnT,CACXA,SAAS,CAACoT,KAAVpT,CAAgB;IACdqD,KAAK,EAAErD,SAAS,CAACsC,MAAVtC,CAAiBE,UADV;IAEd4C,WAAW,EAAE9C,SAAS,CAACsC,MAFT;IAGdS,aAAa,EAAE/C,SAAS,CAACsC;EAHX,CAAhBtC,CADWA,CAtCM;;;EA+CnBgI,kBAAkB,EAAEhI,SAAS,CAACsC,MA/CX;;;EAkDnB2F,gBAAgB,EAAEjI,SAAS,CAACsC,MAlDT;;;EAqDnB0P,UAAU,EAAEhS,SAAS,CAACkF,IArDH;;;EAwDnBmG,cAAc,EAAErL,SAAS,CAACkF,IAxDP;;;EA2DnB+M,kBAAkB,EAAEjS,SAAS,CAACkF,IA3DX;;;EA8DnB4M,aAAa,EAAE9R,SAAS,CAACkF,IA9DN;;;EAiEnBxC,wBAAwB,EAAE1C,SAAS,CAACkF,IAjEjB;;;;;EAsEnBgN,WAAW,EAAElS,SAAS,CAACuC,IAtEJ;;;;;EA2EnB4P,gBAAgB,EAAEnS,SAAS,CAACuC,IA3ET;;;EA8EnB5C,YAAY,EAAEK,SAAS,CAACI,KAAVJ,CAAgB,CAACH,MAAM,CAACV,KAAR,EAAeU,MAAM,CAACT,MAAtB,EAA8BS,MAAM,CAACR,GAArC,CAAhBW,CA9EK;;;EAiFnBiD,WAAW,EAAEjD,SAAS,CAACgF,KAjFJ;;;EAoFnBvD,YAAY,EAAEzB,SAAS,CAACsC,MApFL;;;;EAwFnBK,WAAW,EAAE3C,SAAS,CAACkF,IAxFJ;;;EA2FnBtC,gBAAgB,EAAE5C,SAAS,CAACkF,IA3FT;;;;;;EAiGnBrC,4BAA4B,EAAE7C,SAAS,CAACkF,IAjGrB;;;;EAqGnBmM,cAAc,EAAErR,SAAS,CAACkF,IArGP;;;EAwGnBkE,aAAa,EAAEpJ,SAAS,CAACsC,MAxGN;;;;;EA6GnBqN,QAAQ,EAAE3P,SAAS,CAACuC,IA7GD;;;;EAiHnByM,WAAW,EAAEhP,SAAS,CAACuC,IAjHJ;;;;EAqHnB+M,WAAW,EAAEtP,SAAS,CAACuC,IArHJ;;;;EAyHnBmN,SAAS,EAAE1P,SAAS,CAACuC,IAzHF;;;;EA6HnBsN,SAAS,EAAE7P,SAAS,CAACuC,IA7HF;;;;EAiInBmJ,QAAQ,EAAE1L,SAAS,CAACuC;AAjID,CAArBoF","names":["noop","numberToArray","Array","n","keys","cssPrefix","prefix","space","result","classNames","arguments","chainedClasses","reduce","acc","current","pipe","fns","v","f","x","styled","button","attrs","type","_templateObject","props","disabled","PREV","NEXT","START","CENTER","END","ItemWrapper","div","style","className","_templateObject$1","itemPosition","defaultProps","consts","propTypes","children","PropTypes","element","isRequired","object","oneOf","_templateObject$2","calcLeft","isRTL","verticalMode","isSwiping","swipedSliderPosition","sliderPosition","calcRight","calcTop","calcTransition","transitionMs","easing","tiltEasing","duration","effectiveEasing","transition","left","right","top","_templateObject$3","outerSpacing","height","size","_templateObject$4","_templateObject$5","ItemWrapperContainer","_this","onClick","id","React","Component","oneOfType","string","number","func","Track","childWidth","autoTabIndexVisibleItems","enableSwipe","enableMouseSwipe","preventDefaultTouchmoveEvent","itemsToShow","itemsToScroll","currentItem","itemPadding","onSwiped","onSwiping","onItemClick","width","paddingStyle","join","minVisibleItem","maxVisibleItem","prevItem","nextItem","originalChildren","Children","map","child","idx","isVisible","isPrevItem","isNextItem","itemClass","childToRender","cloneElement","tabIndex","padding","key","toRender","Swipeable","display","flexDirection","stopPropagation","trackMouse","array","noAutoTabbedItems","bool","directionIcons","up","down","arrowClassname","rotateStyle","rotate","direction","Arrow","transform","icons","rest","arrows","styleObj","Button","cx","NEXT_ITEM","PREV_ITEM","activeIndexReducer","state","action","limit","optimisticNextItem","optimisticPrevItem","nextItemAction","prevItemAction","boxShadow","activeBoxShadow","hoveredBoxShadow","Dot","_templateObject$6","active","DotContainer","Indicators","_templateObject$7","Pagination","numOfPages","activePage","pages","item","i","Carousel","rootHeight","childHeight","transitioning","activeIndex","initialActiveIndex","initialFirstItem","sliderContainerWidth","name","ref","ro","ResizeObserver","entries","observer","entry","target","sliderContainer","window","requestAnimationFrame","onContainerResize","slider","onSliderResize","observe","disconnect","getDerivedPropsFromBreakPoint","autoPlaySpeed","autoPlayIntervalId","setInterval","isComponentMounted","slideNext","clearInterval","getNumOfPages","setState","addEventListener","fn","removeEventListener","breakPoints","restOfProps","currentBreakPoint","length","slice","reverse","find","bp","calculateChildWidth","totalItems","toArray","hiddenSlots","moveBy","emptySlots","newActiveIndex","sliderHeight","sliderNode","contentRect","nextState","childrenLength","Math","min","showEmptySlots","newSliderContainerWidth","sliderContainerNode","initialVerticalMode","containerWidth","onResize","currentState","maxItemsToShow","endLimit","updateSliderPosition","position","distance","setTimeout","roundedIdx","round","index","currentIndex","getPrev","notEnoughItemsToShow","nextAction","nextItemIndex","getNextItemIndex","asElement","asObj","deltaX","data","absX","deltaY","absY","dir","goingNext","goingBack","horizontalSwipe","verticalSwipe","horizontalMode","distanceSwipe","horizontalEdgeStoppage","verticalEdgeStoppage","trackSize","shouldHorizontalSkipUpdate","shouldVerticalSkipUpdate","resetSwipe","minSwipeDistanceHorizontal","minSwipeDistanceVertical","swipedLeft","swipedRight","swipedUp","swipedDown","verticalGoSwipe","horizontalGoSwipe","goodToGo","numberOfSlidesViaSwipe","ceil","numberOfSlidesTogo","max","backSlidesToGo","forwardSlideTtoGo","goTo","skipTilt","onNextStart","nextItemObj","getNextItemObj","prevItemObj","convertChildToCbObj","options","onPrevStart","slidePrev","enableTilt","tiltMovement","onNextEnd","onChange","removeSliderTransitionHook","onPrevEnd","nextItemId","newSliderPosition","childSize","safeNextItemId","isPrev","nextAvailableItem","noChange","outOfBoundary","positionEndCb","stateUpdater","generatePositionUpdater","updateActivePage","onSliderTransitionEnd","safeItemsToShow","inRangeItemsToShow","newActivePage","inRangeActivePageIndex","gotoIndex","indicatorId","initResizeObserver","setPages","prevProps","prevState","enableAutoPlay","currentChildrenLength","prevChildrenLength","removeAutoPlay","setAutoPlay","calculatedItemsToShow","lastIndex","isOutOfRange","unSubscribeObserver","focusOnSelect","pagination","showArrows","disableArrowsOnEnd","renderArrow","renderPagination","canSlidePrev","canSlideNext","disabledPrevArrow","disabledNextArrow","CarouselWrapper","StyledCarousel","Only","when","isEdge","SliderContainer","setRef","Slider","undefined","onIndicatorClick","node","arrayOf","shape"],"sources":["C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\utils\\helpers.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\styled\\Button.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\consts.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\styled\\ItemWrapper.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\styled\\SliderContainer.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\styled\\Slider.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\styled\\StyledCarousel.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\styled\\CarouselWrapper.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\ItemWrapperContainer.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\Track.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\Arrow.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\actions\\consts.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\reducers\\items.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\actions\\itemsActions.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\Pagination\\Dot.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\Pagination\\Pagination.js","C:\\Users\\Asus1\\Desktop\\React Project\\envious-cactus-6437\\myfitnesspal\\node_modules\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\Carousel.js"],"sourcesContent":["export const noop = () => {};\n\nexport const numberToArray = n => [...Array(n).keys()];\n\nexport const cssPrefix = (...classNames) => {\n  const prefix = \"rec\";\n  const space = \" \";\n  let result = `${prefix}`; // initial it with global prefix;\n\n  // in case of an array we add the class prefix per item;\n  const chainedClasses = classNames.reduce((acc, current) => {\n    if (current) {\n      acc += `${space}${prefix}-${current}`; // we must keep spaces between class names\n    }\n    return acc;\n  }, \"\");\n  result += chainedClasses;\n\n  return result;\n};\n\nexport const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);\n\nexport const throttle = (func, limit) => {\n  let lastFunc;\n  let lastRan;\n  return function() {\n    const context = this;\n    const args = arguments;\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(function() {\n        if (Date.now() - lastRan >= limit) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        }\n      }, limit - (Date.now() - lastRan));\n    }\n  };\n};\n","import styled from \"styled-components\";\n\nexport default styled.button.attrs(({ type = \"button\" }) => ({ type }))`\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n  font-size: 1.6em;\n  background-color: rgba(103, 58, 183, 0.1);\n  color: ${props => (props.disabled ? \"#999\" : \"#333\")};\n  box-shadow: 0 0 2px 0px #333;\n  border-radius: 50%;\n  border: none;\n  padding: 0;\n  width: 50px;\n  height: 50px;\n  min-width: 50px;\n  line-height: 50px;\n  align-self: center;\n  cursor: pointer;\n  outline: none;\n  &:hover:enabled,\n  &:focus:enabled {\n    color: #fff;\n    background-color: rgba(103, 58, 183, 1);\n    box-shadow: 0 0 2px 0 #333;\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n","export default {\n  PREV: \"PREV\",\n  NEXT: \"NEXT\",\n  START: \"flex-start\",\n  CENTER: \"center\",\n  END: \"flex-end\"\n};\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { cssPrefix } from \"../../utils/helpers\";\nimport consts from \"../../consts\";\n\nconst ItemWrapper = styled.div.attrs(({ style }) => ({\n  style,\n  className: cssPrefix(\"item-wrapper\")\n}))`\n  box-sizing: border-box;\n  display: flex;\n  overflow: hidden;\n  user-select: none;\n  justify-content: ${({ itemPosition }) => itemPosition};\n`;\n\nItemWrapper.defaultProps = {\n  style: {},\n  itemPosition: consts.CENTER\n};\n\nItemWrapper.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.object,\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END])\n};\n\nexport default ItemWrapper;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  margin: 0 10px;\n`;\n","import styled from \"styled-components\";\n\nconst calcLeft = ({\n  isRTL,\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (verticalMode || isRTL) {\n    return \"auto\";\n  } else {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  }\n};\n\nconst calcRight = ({\n  isRTL,\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (!verticalMode && isRTL) {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  } else {\n    return \"auto\";\n  }\n};\n\nconst calcTop = ({\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (!verticalMode) {\n    return \"auto\";\n  } else {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  }\n};\n\nconst calcTransition = ({ isSwiping, transitionMs, easing, tiltEasing }) => {\n  const duration = isSwiping ? 0 : transitionMs;\n  const effectiveEasing = isSwiping ? tiltEasing : easing;\n  return `all ${duration}ms ${effectiveEasing}`;\n};\n\n// We use attributes (style) to bypass multiple creation of classes (dynamic styling)\nexport default styled.div.attrs(props => ({\n  style: {\n    transition: calcTransition(props),\n    left: calcLeft(props),\n    right: calcRight(props),\n    top: calcTop(props)\n  }\n}))`\n  position: absolute;\n  display: flex;\n  flex-direction: ${({ verticalMode }) => (verticalMode ? \"column\" : \"row\")};\n  ${({ verticalMode }) => (verticalMode ? \"min-height: 100%;\" : \"\")};\n  ${({ verticalMode, outerSpacing }) =>\n    verticalMode ? \"\" : `margin: 0 ${outerSpacing}px;`};\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div.attrs(props => ({\n  style: {\n    height: props.size.height\n  }\n}))`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  direction: ${({ isRTL }) => (isRTL ? \"rtl\" : \"ltr\")};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ItemWrapper } from \"./styled\";\nimport { noop } from \"../utils/helpers\";\n\nclass ItemWrapperContainer extends React.Component {\n  onClick = () => {\n    const { onClick, id } = this.props;\n    onClick(id);\n  };\n  render() {\n    return <ItemWrapper {...this.props} onClick={this.onClick} />;\n  }\n}\n\nItemWrapperContainer.defaultProps = {\n  onClick: noop\n};\n\nItemWrapperContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onClick: PropTypes.func\n};\n\nexport default ItemWrapperContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Swipeable } from \"react-swipeable\";\nimport { cssPrefix } from \"../utils/helpers\";\nimport ItemWrapperContainer from \"./ItemWrapperContainer\";\n\nconst Track = ({\n  children,\n  childWidth,\n  autoTabIndexVisibleItems,\n  enableSwipe,\n  enableMouseSwipe,\n  preventDefaultTouchmoveEvent,\n  itemsToShow,\n  itemsToScroll,\n  currentItem,\n  itemPosition,\n  itemPadding,\n  onSwiped,\n  onSwiping,\n  verticalMode,\n  onItemClick\n}) => {\n  const width = `${childWidth}px`;\n  const paddingStyle = `${itemPadding.join(\"px \")}px`;\n  const minVisibleItem = currentItem;\n  const maxVisibleItem = currentItem + itemsToShow;\n  const prevItem = minVisibleItem - itemsToScroll;\n  const nextItem = maxVisibleItem + itemsToScroll;\n\n  const originalChildren = React.Children.map(children, (child, idx) => {\n    const isVisible = idx >= minVisibleItem && idx < maxVisibleItem;\n    const isPrevItem = !isVisible && idx >= prevItem && idx < currentItem;\n    const isNextItem = !isVisible && idx < nextItem && idx > currentItem;\n    const itemClass = \"carousel-item\";\n\n    const childToRender = autoTabIndexVisibleItems\n      ? React.cloneElement(child, {\n          tabIndex: isVisible ? 0 : -1\n        })\n      : child;\n    return (\n      <div\n        className={cssPrefix(\n          itemClass,\n          `${itemClass}-${idx}`,\n          `${itemClass}-${isVisible ? \"visible\" : \"hidden\"}`,\n          isPrevItem && `${itemClass}-prev`,\n          isNextItem && `${itemClass}-next`\n        )}\n      >\n        <ItemWrapperContainer\n          id={idx}\n          itemPosition={itemPosition}\n          style={{ width, padding: paddingStyle }}\n          key={idx}\n          onClick={onItemClick}\n        >\n          {childToRender}\n        </ItemWrapperContainer>\n      </div>\n    );\n  });\n  const toRender = enableSwipe ? (\n    <Swipeable\n      style={{\n        display: \"flex\",\n        flexDirection: verticalMode ? \"column\" : \"row\"\n      }}\n      stopPropagation\n      preventDefaultTouchmoveEvent={preventDefaultTouchmoveEvent}\n      trackMouse={enableMouseSwipe}\n      onSwiped={onSwiped}\n      onSwiping={onSwiping}\n      className={cssPrefix(\"swipable\")}\n    >\n      {originalChildren}\n    </Swipeable>\n  ) : (\n    originalChildren\n  );\n  return toRender;\n};\n\nTrack.propTypes = {\n  children: PropTypes.array.isRequired,\n  itemsToShow: PropTypes.number.isRequired,\n  noAutoTabbedItems: PropTypes.bool,\n  currentItem: PropTypes.number.isRequired,\n  itemPosition: PropTypes.string,\n  itemPadding: PropTypes.array,\n  childWidth: PropTypes.number,\n  verticalMode: PropTypes.bool,\n  enableSwipe: PropTypes.bool,\n  enableMouseSwipe: PropTypes.bool,\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  onSwiped: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onItemClick: PropTypes.func\n};\n\nexport default Track;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { cssPrefix } from \"../utils/helpers\";\nimport { Button } from \"./styled\";\n\nconst directionIcons = {\n  left: \"❮\",\n  right: \"❯\",\n  up: \"❮\",\n  down: \"❯\"\n};\n\nconst arrowClassname = cssPrefix(\"arrow\");\n\nconst rotateStyle = direction => {\n  let rotate = {};\n  if (direction === Arrow.up || direction === Arrow.down) {\n    rotate.transform = \"rotate(90deg)\";\n  }\n  return rotate;\n};\nconst Arrow = ({ direction, onClick, icons, style, ...rest }) => {\n  const arrows = { ...directionIcons, ...icons };\n  const styleObj = {\n    ...rotateStyle(direction),\n    ...style\n  };\n  return (\n    <Button\n      tabIndex={0}\n      onClick={onClick}\n      className={cx(arrowClassname, `${arrowClassname}-${direction}`)}\n      style={styleObj}\n      {...rest}\n    >\n      {arrows[direction]}\n    </Button>\n  );\n};\n\nArrow.left = \"left\";\nArrow.right = \"right\";\nArrow.up = \"up\";\nArrow.down = \"down\";\n\nArrow.propTypes = {\n  direction: PropTypes.oneOf([\"left\", \"right\", \"up\", \"down\"]).isRequired,\n  icons: PropTypes.object,\n  style: PropTypes.object,\n  onClick: PropTypes.func\n};\n\nexport default Arrow;\n","export const NEXT_ITEM = \"NEXT_ITEM\";\nexport const PREV_ITEM = \"PREV_ITEM\";\n","import { NEXT_ITEM, PREV_ITEM } from \"../actions/consts\";\n\nexport const activeIndexReducer = (state, action) => {\n  const { limit, itemsToScroll, type } = action;\n  switch (type) {\n    case NEXT_ITEM: {\n      let optimisticNextItem = state + itemsToScroll;\n      const nextItem = limit >= optimisticNextItem ? optimisticNextItem : limit;\n      return nextItem;\n    }\n\n    case PREV_ITEM: {\n      let optimisticPrevItem = state - itemsToScroll;\n      const prevItem = optimisticPrevItem >= limit ? optimisticPrevItem : limit;\n      return prevItem;\n    }\n\n    default:\n      return state;\n  }\n};\n","import { NEXT_ITEM, PREV_ITEM } from \"./consts\";\n\nexport const nextItemAction = (limit, itemsToScroll) => ({\n  type: NEXT_ITEM,\n  limit,\n  itemsToScroll\n});\n\nexport const prevItemAction = (limit, itemsToScroll) => ({\n  type: PREV_ITEM,\n  limit,\n  itemsToScroll\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { cssPrefix } from \"../../utils/helpers\";\n\nconst boxShadow = \"0 0 1px 2px rgba(0, 0, 0, 0.5)\";\nconst activeBoxShadow = \"0 0 1px 3px rgba(103,58,183,1)\";\nconst hoveredBoxShadow = \"0 0 1px 3px rgba(103,58,183,.5)\";\n\nconst Dot = styled.button.attrs(({ type = \"button\" }) => ({ type }))`\n  box-sizing: border-box;\n  padding: 0;\n  transition: all 250ms ease;\n  border: none;\n  margin: 5px;\n  background-color: ${({ active }) =>\n    active ? \"rgba(103,58,183,.5)\" : \"transparent\"};\n  font-size: 1.3em;\n  content: \"\";\n  height: 10px;\n  width: 10px;\n  box-shadow: ${({ active }) => (active ? activeBoxShadow : boxShadow)};\n  border-radius: 50%;\n  outline: none;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    box-shadow: ${({ active }) =>\n      active ? activeBoxShadow : hoveredBoxShadow};\n  }\n`;\n\nclass DotContainer extends React.Component {\n  onClick = () => {\n    const { onClick, id } = this.props;\n    onClick(id);\n  };\n  render() {\n    const { active } = this.props;\n    return (\n      <Dot\n        tabIndex={active ? -1 : 0}\n        onClick={this.onClick}\n        active={active}\n        className={`${cssPrefix(\"dot\")} ${\n          active ? cssPrefix(\"dot_active\") : \"\"\n        }`}\n      />\n    );\n  }\n}\n\nDotContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  active: PropTypes.bool,\n  onClick: PropTypes.func\n};\n\nexport default DotContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Dot from \"./Dot\";\nimport { numberToArray, cssPrefix, noop } from \"../../utils/helpers\";\n\nconst Indicators = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n`;\n\nclass Pagination extends React.Component {\n  render() {\n    const { numOfPages, activePage, onClick } = this.props;\n    const pages = numberToArray(numOfPages);\n    return (\n      <Indicators className={cssPrefix(\"pagination\")}>\n        {pages.map((item, i) => (\n          <Dot key={i} id={i} active={i === activePage} onClick={onClick} />\n        ))}\n      </Indicators>\n    );\n  }\n}\n\nPagination.defaultProps = {\n  onClick: noop\n};\n\nPagination.propTypes = {\n  numOfPages: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onClick: PropTypes.func\n};\n\nexport default Pagination;\n","import React, { Children } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport Only from \"react-only-when\";\nimport Track from \"./Track\";\nimport Arrow from \"./Arrow\";\nimport consts from \"../consts\";\nimport { activeIndexReducer } from \"../reducers/items\";\nimport { nextItemAction, prevItemAction } from \"../actions/itemsActions\";\nimport {\n  SliderContainer,\n  Slider,\n  StyledCarousel,\n  CarouselWrapper\n} from \"./styled\";\nimport { pipe, noop, cssPrefix, numberToArray } from \"../utils/helpers\";\nimport { Pagination } from \"./Pagination\";\n\nclass Carousel extends React.Component {\n  isComponentMounted = false;\n  state = {\n    rootHeight: 0,\n    childHeight: 0,\n    sliderPosition: 0,\n    swipedSliderPosition: 0,\n    isSwiping: false,\n    transitioning: false,\n    transitionMs: this.props.transitionMs,\n    activeIndex: this.props.initialActiveIndex || this.props.initialFirstItem, // support deprecated  initialFirstItem\n    pages: [],\n    activePage: 0,\n    sliderContainerWidth: 0\n  };\n\n  componentDidMount() {\n    this.isComponentMounted = true;\n    this.initResizeObserver();\n    this.updateActivePage();\n    this.setPages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      enableAutoPlay,\n      children,\n      itemsToShow,\n      itemsToScroll,\n      breakPoints\n    } = this.props;\n    const { activeIndex, sliderContainerWidth } = this.state;\n    const nextItem = this.getNextItemIndex(activeIndex, false);\n    const currentChildrenLength = Children.toArray(children).length;\n    const prevChildrenLength = Children.toArray(prevProps.children).length;\n    // update pages (for pagination)\n    if (\n      prevChildrenLength !== currentChildrenLength ||\n      prevProps.itemsToShow !== itemsToShow ||\n      prevProps.itemsToScroll !== itemsToScroll ||\n      prevProps.breakPoints !== breakPoints ||\n      sliderContainerWidth !== prevState.sliderContainerWidth\n    ) {\n      // we mimic a container resize to recalculate item width when itemsToShow are updated\n      this.onContainerResize({ contentRect: { width: sliderContainerWidth } });\n      this.setPages();\n      this.updateActivePage();\n    }\n\n    // autoplay update\n    if (activeIndex === nextItem) {\n      this.removeAutoPlay();\n    } else if (enableAutoPlay && !this.autoPlayIntervalId) {\n      this.setAutoPlay();\n    } else if (!enableAutoPlay && this.autoPlayIntervalId) {\n      this.removeAutoPlay();\n    }\n\n    if (prevChildrenLength !== currentChildrenLength) {\n      const {\n        itemsToShow: calculatedItemsToShow\n      } = this.getDerivedPropsFromBreakPoint();\n      // number of items is reduced (we don't care if number of items is increased)\n      // we need to check if our current index is not out of boundaries\n      // we need to include itemsToShow so we can fill up the slots\n      const lastIndex = currentChildrenLength - 1;\n      const isOutOfRange = activeIndex + calculatedItemsToShow > lastIndex;\n      if (isOutOfRange) {\n        // we are out of boundaries, go \"back\" to last item of the list (respect itemsToShow)\n        this.goTo(Math.max(0, currentChildrenLength - calculatedItemsToShow));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n    this.removeAutoPlay();\n    this.unSubscribeObserver();\n  }\n\n  setRef = name => ref => (this[name] = ref);\n\n  initResizeObserver = () => {\n    this.ro = new ResizeObserver((entries, observer) => {\n      for (const entry of entries) {\n        if (entry.target === this.sliderContainer) {\n          // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n          // TBH, I'm not sure i fully understand why.\n          // see https://github.com/sag1v/react-elastic-carousel/issues/107\n          window.requestAnimationFrame(() => {\n            this.onContainerResize(entry);\n          });\n        }\n        if (entry.target === this.slider) {\n          // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n          // TBH, I'm not sure i fully understand why\n          // see https://github.com/sag1v/react-elastic-carousel/issues/107\n          window.requestAnimationFrame(() => {\n            this.onSliderResize(entry);\n          });\n        }\n      }\n    });\n\n    this.ro.observe(this.sliderContainer);\n    this.ro.observe(this.slider);\n  };\n\n  unSubscribeObserver = () => this.ro.disconnect();\n\n  setAutoPlay = () => {\n    const { autoPlaySpeed } = this.getDerivedPropsFromBreakPoint();\n    this.autoPlayIntervalId = setInterval(() => {\n      if (this.isComponentMounted) {\n        const { transitioning } = this.state;\n        if (!transitioning) {\n          this.slideNext();\n        }\n      }\n    }, autoPlaySpeed);\n  };\n\n  removeAutoPlay = () => {\n    if (this.autoPlayIntervalId) {\n      clearInterval(this.autoPlayIntervalId);\n      this.autoPlayIntervalId = null;\n    }\n  };\n\n  setPages = () => {\n    const numOfPages = this.getNumOfPages();\n    const pages = numberToArray(numOfPages);\n    this.setState({ pages });\n  };\n\n  onSliderTransitionEnd = fn => {\n    this.slider.addEventListener(\"transitionend\", fn);\n  };\n\n  removeSliderTransitionHook = fn => {\n    this.slider.removeEventListener(\"transitionend\", fn);\n  };\n\n  getDerivedPropsFromBreakPoint = () => {\n    const { breakPoints, ...restOfProps } = this.props;\n    const { sliderContainerWidth } = this.state;\n\n    // default breakpoint from individual props\n    let currentBreakPoint;\n    // if breakpoints were added as props override the individual props\n    if (breakPoints && breakPoints.length > 0) {\n      currentBreakPoint = breakPoints\n        .slice() // no mutations\n        .reverse() // so we can find last match\n        .find(bp => bp.width <= sliderContainerWidth);\n      if (!currentBreakPoint) {\n        /* in case we don't have a lower width than sliderContainerWidth\n         * this mostly happens in initilization when sliderContainerWidth is 0\n         */\n        currentBreakPoint = breakPoints[0];\n      }\n    }\n    // merge direct props with current breakpoint Props\n    return { ...restOfProps, ...currentBreakPoint };\n  };\n\n  updateSliderPosition = () => {\n    this.setState(state => {\n      const {\n        children,\n        verticalMode,\n        itemsToShow,\n        transitionMs\n      } = this.getDerivedPropsFromBreakPoint();\n      const { childHeight, activeIndex } = state;\n\n      const childWidth = this.calculateChildWidth();\n      const totalItems = Children.toArray(children).length;\n      const hiddenSlots = totalItems - itemsToShow;\n      let moveBy = activeIndex * -1;\n      const emptySlots = itemsToShow - (totalItems - activeIndex);\n      if (emptySlots > 0 && hiddenSlots > 0) {\n        moveBy = emptySlots + activeIndex * -1;\n      }\n      let sliderPosition = (verticalMode ? childHeight : childWidth) * moveBy;\n      const newActiveIndex =\n        emptySlots > 0 ? activeIndex - emptySlots : activeIndex;\n      // go back from 0ms to whatever set by the user\n      // We were at 0ms because we wanted to disable animation on resize\n      // see https://github.com/sag1v/react-elastic-carousel/issues/94\n      window.requestAnimationFrame(() => {\n        if (this.isComponentMounted) {\n          this.setState({ transitionMs });\n        }\n      });\n      return {\n        sliderPosition,\n        activeIndex: newActiveIndex < 0 ? 0 : newActiveIndex\n      };\n    });\n  };\n\n  onSliderResize = sliderNode => {\n    if (!this.isComponentMounted) {\n      return;\n    }\n\n    const {\n      verticalMode,\n      children,\n      itemsToShow\n    } = this.getDerivedPropsFromBreakPoint();\n    const { height: sliderHeight } = sliderNode.contentRect;\n    const nextState = {};\n    const childrenLength = Children.toArray(children).length;\n    if (verticalMode) {\n      const childHeight = sliderHeight / childrenLength;\n      // We use Math.min because we don't want to make the child smaller\n      // if the number of children is smaller than itemsToShow.\n      // (Because we do not want \"empty slots\")\n      nextState.rootHeight =\n        childHeight * Math.min(childrenLength, itemsToShow);\n      nextState.childHeight = childHeight;\n    } else {\n      nextState.rootHeight = sliderHeight;\n    }\n    this.setState(nextState);\n  };\n\n  calculateChildWidth = () => {\n    const { sliderContainerWidth } = this.state;\n    const {\n      verticalMode,\n      itemsToShow,\n      showEmptySlots,\n      children\n    } = this.getDerivedPropsFromBreakPoint();\n\n    /* based on slider container's width, get num of items to show\n        * and calculate child's width (and update it in state)\n        */\n    const childrenLength = Children.toArray(children).length || 1;\n\n    let childWidth = 0;\n    if (verticalMode) {\n      childWidth = sliderContainerWidth;\n    } else {\n      // When \"showEmptySlots\" is false\n      // We use Math.min because we don't want to make the child smaller\n      // if the number of children is smaller than itemsToShow.\n      // (Because we do not want \"empty slots\")\n      childWidth =\n        sliderContainerWidth /\n        (showEmptySlots ? itemsToShow : Math.min(childrenLength, itemsToShow));\n    }\n    return childWidth;\n  };\n\n  onContainerResize = sliderContainerNode => {\n    const { width: newSliderContainerWidth } = sliderContainerNode.contentRect;\n    // update slider container width\n    // disable animation on resize see https://github.com/sag1v/react-elastic-carousel/issues/94\n    const {\n      outerSpacing,\n      verticalMode: initialVerticalMode\n    } = this.getDerivedPropsFromBreakPoint();\n    const containerWidth =\n      newSliderContainerWidth - (initialVerticalMode ? 0 : outerSpacing * 2);\n\n    if (\n      !this.isComponentMounted ||\n      this.state.sliderContainerWidth === newSliderContainerWidth\n    ) {\n      // prevent infinite loop\n      return;\n    }\n    this.setState(\n      { sliderContainerWidth: containerWidth, transitionMs: 0 },\n      () => {\n        // we must get these props inside setState (get future props because its async)\n        const {\n          onResize,\n          itemsToShow,\n          children\n        } = this.getDerivedPropsFromBreakPoint();\n\n        const childrenLength = Children.toArray(children).length || 1;\n\n        this.setState(\n          currentState => {\n            // We might need to change the selected index when the size of the container changes\n            // we are making sure the selected index is not out of boundaries and respecting itemsToShow\n            // This usually happens with breakpoints. see https://github.com/sag1v/react-elastic-carousel/issues/122\n            let activeIndex = currentState.activeIndex;\n            // we take the lowest, in case itemsToShow is greater than childrenLength\n            const maxItemsToShow = Math.min(childrenLength, itemsToShow);\n            const endLimit = childrenLength - maxItemsToShow;\n            if (activeIndex > endLimit) {\n              activeIndex = endLimit;\n            }\n\n            return { activeIndex };\n          },\n          () => {\n            /* Based on all of the above new data:\n            * update slider position\n            * get the new current breakpoint\n            * pass the current breakpoint to the consumer's callback\n            */\n            this.updateSliderPosition();\n            const currentBreakPoint = this.getDerivedPropsFromBreakPoint();\n            onResize(currentBreakPoint);\n          }\n        );\n      }\n    );\n  };\n\n  tiltMovement = (position, distance = 20, duration = 150) => {\n    this.setState(state => {\n      return {\n        isSwiping: true,\n        swipedSliderPosition: position - distance\n      };\n    });\n    setTimeout(() => {\n      this.setState({\n        isSwiping: false,\n        swipedSliderPosition: 0\n      });\n    }, duration);\n  };\n\n  convertChildToCbObj = index => {\n    const { children } = this.getDerivedPropsFromBreakPoint();\n    // support decimal itemsToShow\n    const roundedIdx = Math.round(index);\n    const child = Children.toArray(children)[roundedIdx];\n    return { item: child.props, index: roundedIdx };\n  };\n\n  getNextItemIndex = (currentIndex, getPrev) => {\n    const {\n      children,\n      itemsToShow,\n      itemsToScroll\n    } = this.getDerivedPropsFromBreakPoint();\n    const childrenLength = Children.toArray(children).length || 1;\n    const notEnoughItemsToShow = itemsToShow > childrenLength;\n    let limit = getPrev ? 0 : childrenLength - itemsToShow;\n\n    if (notEnoughItemsToShow) {\n      limit = 0; // basically don't move\n    }\n    const nextAction = getPrev\n      ? prevItemAction(0, itemsToScroll)\n      : nextItemAction(limit, itemsToScroll);\n    const nextItem = activeIndexReducer(currentIndex, nextAction);\n    return nextItem;\n  };\n\n  getNextItemObj = getPrev => {\n    const { children } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemIndex = this.getNextItemIndex(activeIndex, getPrev);\n    // support decimal itemsToShow\n    const roundedIdx = Math.round(nextItemIndex);\n    const asElement = Children.toArray(children)[roundedIdx];\n    const asObj = { item: asElement.props, index: roundedIdx };\n    return asObj;\n  };\n\n  resetSwipe = () => {\n    this.setState({\n      swipedSliderPosition: 0,\n      transitioning: false,\n      isSwiping: false\n    });\n  };\n\n  onSwiping = data => {\n    const { deltaX, absX, deltaY, absY, dir } = data;\n\n    this.setState(state => {\n      const { childHeight, activeIndex, sliderPosition } = state;\n      const {\n        itemsToShow,\n        verticalMode,\n        children,\n        isRTL\n      } = this.getDerivedPropsFromBreakPoint();\n\n      const childWidth = this.calculateChildWidth();\n\n      // determine how far can user swipe\n      const childrenLength = Children.toArray(children).length || 1;\n      const goingNext =\n        (!verticalMode && dir === \"Left\" && !isRTL) ||\n        (!verticalMode && dir === \"Right\" && isRTL) ||\n        (verticalMode && dir === \"Up\");\n      const goingBack =\n        (!verticalMode && dir === \"Right\" && !isRTL) ||\n        (!verticalMode && dir === \"Left\" && isRTL) ||\n        (verticalMode && dir === \"Down\");\n\n      const horizontalSwipe = dir === \"Left\" || dir === \"Right\";\n      const verticalSwipe = dir === \"Up\" || dir === \"Down\";\n      const horizontalMode = !verticalMode;\n\n      let distanceSwipe = 0;\n      const horizontalEdgeStoppage = childWidth / 2;\n      const verticalEdgeStoppage = childHeight / 2;\n\n      if (verticalMode) {\n        if (verticalSwipe) {\n          const trackSize = childrenLength * childHeight;\n          if (goingNext) {\n            distanceSwipe =\n              trackSize -\n              childHeight * activeIndex -\n              itemsToShow * childHeight +\n              verticalEdgeStoppage;\n          } else if (goingBack) {\n            distanceSwipe = childHeight * activeIndex + verticalEdgeStoppage;\n          }\n        }\n      } else {\n        if (horizontalSwipe) {\n          const trackSize = childrenLength * childWidth;\n          if (goingNext) {\n            distanceSwipe =\n              trackSize -\n              childWidth * activeIndex -\n              itemsToShow * childWidth +\n              horizontalEdgeStoppage;\n          } else if (goingBack) {\n            distanceSwipe = childWidth * activeIndex + horizontalEdgeStoppage;\n          }\n        }\n      }\n\n      const shouldHorizontalSkipUpdate =\n        (horizontalMode && verticalSwipe) ||\n        (horizontalMode && horizontalSwipe && absX > distanceSwipe);\n\n      const shouldVerticalSkipUpdate =\n        (verticalMode && horizontalSwipe) ||\n        (verticalMode && verticalSwipe && absY > distanceSwipe);\n\n      if (shouldHorizontalSkipUpdate || shouldVerticalSkipUpdate) {\n        // bail out of state update\n        return;\n      }\n      let swipedSliderPosition;\n      if (horizontalSwipe) {\n        if (isRTL) {\n          swipedSliderPosition = sliderPosition + deltaX;\n        } else {\n          swipedSliderPosition = sliderPosition - deltaX;\n        }\n      } else {\n        swipedSliderPosition = sliderPosition - deltaY;\n      }\n      return {\n        swipedSliderPosition,\n        isSwiping: true,\n        transitioning: true\n      };\n    });\n  };\n\n  onSwiped = data => {\n    // we need to handle all scenarios:\n    // 1. Horizontal mode - swipe left or right\n    // 2. Horizontal mode with RTL - swipe left or right\n    // 3. vertical mode - swipe up or down\n\n    const { absX, absY, dir } = data;\n    const { childHeight, activeIndex } = this.state;\n    const {\n      verticalMode,\n      isRTL,\n      itemsToScroll\n    } = this.getDerivedPropsFromBreakPoint();\n    const childWidth = this.calculateChildWidth();\n\n    let func = this.resetSwipe;\n    const minSwipeDistanceHorizontal = childWidth / 5;\n    const minSwipeDistanceVertical = childHeight / 5;\n    const swipedLeft = dir === \"Left\";\n    const swipedRight = dir === \"Right\";\n    const swipedUp = dir === \"Up\";\n    const swipedDown = dir === \"Down\";\n    const verticalGoSwipe =\n      verticalMode &&\n      (swipedUp || swipedDown) &&\n      absY > minSwipeDistanceVertical;\n\n    const horizontalGoSwipe =\n      !verticalMode &&\n      (swipedRight || swipedLeft) &&\n      absX > minSwipeDistanceHorizontal;\n\n    let goodToGo = false;\n    if (verticalGoSwipe || horizontalGoSwipe) {\n      goodToGo = true;\n    }\n\n    if (goodToGo) {\n      // we should go to a different item\n      // determine what method we need to invoke\n\n      if (verticalMode) {\n        // get number of slides from user's swiping\n        const numberOfSlidesViaSwipe = Math.ceil(\n          (absY - minSwipeDistanceVertical) / childHeight\n        );\n        // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n        const numberOfSlidesTogo = Math.max(\n          itemsToScroll,\n          numberOfSlidesViaSwipe\n        );\n\n        const backSlidesToGo = activeIndex - numberOfSlidesTogo;\n        const forwardSlideTtoGo = activeIndex + numberOfSlidesTogo;\n\n        // up or down\n        if (swipedDown) {\n          // func = this.onPrevStart;\n          func = () => this.goTo(backSlidesToGo);\n        }\n        if (swipedUp) {\n          // func = this.onNextStart;\n          func = () => this.goTo(forwardSlideTtoGo);\n        }\n      } else {\n        // get number of slides from user's swiping\n        const numberOfSlidesViaSwipe = Math.ceil(\n          (absX - minSwipeDistanceHorizontal) / childWidth\n        );\n        // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n        const numberOfSlidesTogo = Math.max(\n          itemsToScroll,\n          numberOfSlidesViaSwipe\n        );\n\n        const backSlidesToGo = activeIndex - numberOfSlidesTogo;\n        const forwardSlideTtoGo = activeIndex + numberOfSlidesTogo;\n\n        // horizontal mode\n        if (isRTL) {\n          // flip sides\n          if (swipedLeft) {\n            // func = this.onPrevStart;\n            func = () => this.goTo(backSlidesToGo);\n          }\n          if (swipedRight) {\n            // func = this.onNextStart;\n            func = () => this.goTo(forwardSlideTtoGo);\n          }\n        } else {\n          // normal behavior\n          if (swipedLeft) {\n            // func = this.onNextStart;\n            func = () => this.goTo(forwardSlideTtoGo);\n          }\n          if (swipedRight) {\n            // func = this.onPrevStart;\n            func = () => this.goTo(backSlidesToGo);\n          }\n        }\n      }\n    }\n    // we are not \"tilting\" on edges, so we need to reset isSwiping and transitioning.\n    // otherwise we wont slide back to edge\n    this.setState({ isSwiping: false, transitioning: false });\n    func({ skipTilt: true });\n  };\n\n  onNextStart = options => {\n    const { onNextStart } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemObj = this.getNextItemObj();\n    const prevItemObj = this.convertChildToCbObj(activeIndex);\n    onNextStart(prevItemObj, nextItemObj);\n    this.slideNext(options);\n  };\n\n  onPrevStart = options => {\n    const { onPrevStart } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemObj = this.getNextItemObj(true);\n    const prevItemObj = this.convertChildToCbObj(activeIndex);\n    onPrevStart(prevItemObj, nextItemObj);\n    this.slidePrev(options);\n  };\n\n  slideNext = (options = {}) => {\n    const { skipTilt } = options;\n    const { enableTilt } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, sliderPosition } = this.state;\n    const nextItem = this.getNextItemIndex(activeIndex, false);\n    if (activeIndex !== nextItem) {\n      this.goTo(nextItem);\n    } else if (enableTilt && !skipTilt) {\n      this.tiltMovement(sliderPosition, 20, 150);\n    }\n  };\n\n  slidePrev = (options = {}) => {\n    const { skipTilt } = options;\n    const { activeIndex } = this.state;\n    const { enableTilt } = this.getDerivedPropsFromBreakPoint();\n    const prevItem = this.getNextItemIndex(activeIndex, true);\n    if (activeIndex !== prevItem) {\n      this.goTo(prevItem);\n    } else if (enableTilt && !skipTilt) {\n      this.tiltMovement(0, -20, 150);\n    }\n  };\n\n  onNextEnd = () => {\n    const { onNextEnd, onChange } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, activePage } = this.state;\n    const nextItemObj = this.convertChildToCbObj(activeIndex);\n    this.removeSliderTransitionHook(this.onNextEnd);\n    this.setState({ transitioning: false });\n    onChange && onChange(nextItemObj, activePage);\n    onNextEnd(nextItemObj, activePage);\n  };\n\n  onPrevEnd = () => {\n    const { onPrevEnd, onChange } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, activePage } = this.state;\n    const nextItemObj = this.convertChildToCbObj(activeIndex);\n    this.removeSliderTransitionHook(this.onPrevEnd);\n    this.setState({ transitioning: false });\n    onChange && onChange(nextItemObj, activePage);\n    onPrevEnd(nextItemObj, activePage);\n  };\n\n  generatePositionUpdater = (\n    direction,\n    nextItemId,\n    verticalMode,\n    rest\n  ) => state => {\n    const { sliderPosition, childHeight, activeIndex } = state;\n    const childWidth = this.calculateChildWidth();\n\n    let newSliderPosition = 0;\n    const childSize = verticalMode ? childHeight : childWidth;\n    if (direction === consts.NEXT) {\n      newSliderPosition =\n        sliderPosition - childSize * (nextItemId - activeIndex);\n    } else {\n      newSliderPosition =\n        sliderPosition + childSize * (activeIndex - nextItemId);\n    }\n\n    return {\n      sliderPosition: newSliderPosition,\n      activeIndex: nextItemId,\n      swipedSliderPosition: 0,\n      isSwiping: false,\n      ...rest\n    };\n  };\n\n  goTo = nextItemId => {\n    const {\n      children,\n      verticalMode,\n      itemsToShow\n    } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const childrenLength = Children.toArray(children).length;\n    let safeNextItemId = Math.max(0, nextItemId); // don't allow negative numbers\n    const isPrev = activeIndex > safeNextItemId;\n    const nextAvailableItem = this.getNextItemIndex(activeIndex, isPrev);\n    const noChange = nextAvailableItem === activeIndex;\n    const outOfBoundary = safeNextItemId + itemsToShow >= childrenLength;\n    if (noChange) {\n      return;\n    }\n    if (outOfBoundary) {\n      // Either go to last index (respect itemsToShow) or 0 index if we can't fill the slider\n      safeNextItemId = Math.max(0, childrenLength - itemsToShow);\n    }\n    let direction = consts.NEXT;\n    let positionEndCb = this.onNextEnd;\n    if (isPrev) {\n      direction = consts.PREV;\n      positionEndCb = this.onPrevEnd;\n    }\n    const stateUpdater = this.generatePositionUpdater(\n      direction,\n      safeNextItemId,\n      verticalMode,\n      {\n        transitioning: true\n      }\n    );\n    this.setState(stateUpdater, () => {\n      // callback\n      pipe(\n        this.updateActivePage(),\n        this.onSliderTransitionEnd(positionEndCb)\n      );\n    });\n  };\n\n  getNumOfPages = () => {\n    const { children, itemsToShow } = this.getDerivedPropsFromBreakPoint();\n    const childrenLength = Children.toArray(children).length;\n    const safeItemsToShow = Math.max(itemsToShow, 1);\n    const numOfPages = Math.ceil(childrenLength / safeItemsToShow);\n    return numOfPages || 1;\n  };\n\n  updateActivePage = () => {\n    this.setState(state => {\n      const { itemsToShow, children } = this.getDerivedPropsFromBreakPoint();\n      const { activeIndex, activePage } = state;\n      const numOfPages = this.getNumOfPages();\n      const childrenLength = Children.toArray(children).length;\n      const inRangeItemsToShow = Math.min(childrenLength, itemsToShow);\n      // watch out from 0 (so we wont divide by zero)\n      const safeItemsToShow = Math.max(inRangeItemsToShow, 1);\n      const newActivePage = Math.ceil(activeIndex / safeItemsToShow);\n      const inRangeActivePageIndex = Math.min(numOfPages - 1, newActivePage);\n      if (activePage !== inRangeActivePageIndex) {\n        return { activePage: inRangeActivePageIndex };\n      }\n    });\n  };\n\n  onIndicatorClick = indicatorId => {\n    const { itemsToShow } = this.getDerivedPropsFromBreakPoint();\n    const gotoIndex = indicatorId * itemsToShow;\n    this.setState({ activePage: indicatorId });\n    this.goTo(gotoIndex);\n  };\n\n  render() {\n    const {\n      activePage,\n      isSwiping,\n      sliderPosition,\n      swipedSliderPosition,\n      rootHeight,\n      pages,\n      activeIndex,\n      transitionMs\n    } = this.state;\n    const {\n      className,\n      style,\n      itemsToShow,\n      itemsToScroll,\n      verticalMode,\n      isRTL,\n      easing,\n      tiltEasing,\n      children,\n      focusOnSelect,\n      autoTabIndexVisibleItems,\n      itemPosition,\n      itemPadding,\n      outerSpacing,\n      enableSwipe,\n      enableMouseSwipe,\n      pagination,\n      showArrows,\n      disableArrowsOnEnd,\n      preventDefaultTouchmoveEvent,\n      renderArrow,\n      renderPagination\n    } = this.getDerivedPropsFromBreakPoint();\n\n    const childWidth = this.calculateChildWidth();\n\n    const numOfPages = this.getNumOfPages();\n\n    /** Determine if arrows should be disabled */\n    const canSlidePrev =\n      activeIndex !== this.getNextItemIndex(activeIndex, true);\n    const canSlideNext =\n      activeIndex !== this.getNextItemIndex(activeIndex, false);\n    const disabledPrevArrow = !canSlidePrev && disableArrowsOnEnd;\n    const disabledNextArrow = !canSlideNext && disableArrowsOnEnd;\n\n    return (\n      <CarouselWrapper\n        isRTL={isRTL}\n        className={`${cssPrefix(\"carousel-wrapper\")} ${className}`}\n        style={style}\n      >\n        <StyledCarousel\n          className={cssPrefix(\"carousel\")}\n          size={{ height: rootHeight }}\n        >\n          <Only when={showArrows}>\n            {renderArrow ? (\n              renderArrow({\n                type: consts.PREV,\n                onClick: this.onPrevStart,\n                isEdge: !canSlidePrev\n              })\n            ) : (\n              <Arrow\n                onClick={this.onPrevStart}\n                direction={verticalMode ? Arrow.up : Arrow.left}\n                disabled={disabledPrevArrow}\n              />\n            )}\n          </Only>\n          <SliderContainer\n            className={cssPrefix(\"slider-container\")}\n            ref={this.setRef(\"sliderContainer\")}\n          >\n            <Slider\n              verticalMode={verticalMode}\n              isRTL={isRTL}\n              easing={easing}\n              sliderPosition={sliderPosition}\n              swipedSliderPosition={swipedSliderPosition}\n              isSwiping={isSwiping}\n              transitionMs={transitionMs}\n              tiltEasing={tiltEasing}\n              className={cssPrefix(\"slider\")}\n              ref={this.setRef(\"slider\")}\n              outerSpacing={outerSpacing}\n            >\n              <Track\n                verticalMode={verticalMode}\n                children={Children.toArray(children)}\n                childWidth={childWidth}\n                currentItem={activeIndex}\n                autoTabIndexVisibleItems={autoTabIndexVisibleItems}\n                itemsToShow={itemsToShow}\n                itemsToScroll={itemsToScroll}\n                itemPosition={itemPosition}\n                itemPadding={itemPadding}\n                enableSwipe={enableSwipe}\n                enableMouseSwipe={enableMouseSwipe}\n                preventDefaultTouchmoveEvent={preventDefaultTouchmoveEvent}\n                onSwiped={this.onSwiped}\n                onSwiping={this.onSwiping}\n                onItemClick={focusOnSelect ? this.goTo : undefined}\n              />\n            </Slider>\n          </SliderContainer>\n          <Only when={showArrows}>\n            {renderArrow ? (\n              renderArrow({\n                type: consts.NEXT,\n                onClick: this.onNextStart,\n                isEdge: !canSlideNext\n              })\n            ) : (\n              <Arrow\n                onClick={this.onNextStart}\n                direction={verticalMode ? Arrow.down : Arrow.right}\n                disabled={disabledNextArrow}\n              />\n            )}\n          </Only>\n        </StyledCarousel>\n        <Only when={pagination}>\n          {renderPagination ? (\n            renderPagination({\n              pages: pages,\n              activePage,\n              onClick: this.onIndicatorClick\n            })\n          ) : (\n            <Pagination\n              numOfPages={numOfPages}\n              activePage={activePage}\n              onClick={this.onIndicatorClick}\n            />\n          )}\n        </Only>\n      </CarouselWrapper>\n    );\n  }\n}\n\nCarousel.defaultProps = {\n  className: \"\",\n  style: {},\n  verticalMode: false,\n  isRTL: false,\n  initialFirstItem: 0,\n  initialActiveIndex: 0,\n  showArrows: true,\n  showEmptySlots: false,\n  disableArrowsOnEnd: true,\n  pagination: true,\n  easing: \"ease\",\n  tiltEasing: \"ease\",\n  transitionMs: 500,\n  enableTilt: true,\n  enableSwipe: true,\n  enableMouseSwipe: true,\n  preventDefaultTouchmoveEvent: false,\n  focusOnSelect: false,\n  autoTabIndexVisibleItems: true,\n  itemsToShow: 1,\n  itemsToScroll: 1,\n  itemPosition: consts.CENTER,\n  itemPadding: [0, 0, 0, 0],\n  outerSpacing: 0,\n  enableAutoPlay: false,\n  autoPlaySpeed: 2000,\n\n  // callbacks\n  onChange: noop,\n  onNextEnd: noop,\n  onPrevEnd: noop,\n  onNextStart: noop,\n  onPrevStart: noop,\n  onResize: noop\n};\n\nCarousel.propTypes = {\n  /** Items to render */\n  children: PropTypes.node.isRequired,\n\n  /** The css class for the root element */\n  className: PropTypes.string,\n\n  /** The style object for the root element */\n  style: PropTypes.object,\n\n  /** Display the Carousel in a vertical layout */\n  verticalMode: PropTypes.bool,\n\n  /** Flip right to left */\n  isRTL: PropTypes.bool,\n\n  /** Show dots for paging */\n  pagination: PropTypes.bool,\n\n  /** Animation speed */\n  transitionMs: PropTypes.number,\n\n  /** transition easing pattern */\n  easing: PropTypes.string,\n\n  /** transition easing pattern for the tilt */\n  tiltEasing: PropTypes.string,\n\n  /** The \"bump\" animation when reaching the last item */\n  enableTilt: PropTypes.bool,\n\n  /** Number of visible items  */\n  itemsToShow: PropTypes.number,\n\n  /** Number of items to scroll */\n  itemsToScroll: PropTypes.number,\n\n  /** Collection of objects with a width, itemsToShow and itemsToScroll  */\n  breakPoints: PropTypes.arrayOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      itemsToShow: PropTypes.number,\n      itemsToScroll: PropTypes.number\n    })\n  ),\n\n  /** The initial active index when the component mounts */\n  initialActiveIndex: PropTypes.number,\n\n  /** **DEPRECATED - use initialActiveIndex instead** The first items when the component mounts */\n  initialFirstItem: PropTypes.number,\n\n  /** Show the arrow buttons */\n  showArrows: PropTypes.bool,\n\n  /** Show empty slots when children.length < itemsToShow (not compatible with verticalMode yet !) */\n  showEmptySlots: PropTypes.bool,\n\n  /** Disables the arrow button when there are no more items */\n  disableArrowsOnEnd: PropTypes.bool,\n\n  /** Go to item on click */\n  focusOnSelect: PropTypes.bool,\n\n  /** Automatically inject `tabIndex:0` to visible items */\n  autoTabIndexVisibleItems: PropTypes.bool,\n\n  /** A render prop for the arrow component\n   * - ({type, onClick}) => <div onClick={onClick}>{type === 'prev' ? '<-' : '->'}</div>\n   */\n  renderArrow: PropTypes.func,\n\n  /** A render prop for the pagination component\n   * - ({ pages, activePage, onClick }) =>  <YourComponent/>\n   */\n  renderPagination: PropTypes.func,\n\n  /** Position the element relative to it's wrapper (use the consts object) - consts.START | consts.CENTER | consts.END */\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END]),\n\n  /** A padding for each element  */\n  itemPadding: PropTypes.array,\n\n  /** A margin at the beginning and at the end of the carousel (not compatible with verticalMode yet !) */\n  outerSpacing: PropTypes.number,\n\n  // swipe\n  /** Enable or disable swipe */\n  enableSwipe: PropTypes.bool,\n\n  /** Enable or disable mouse swipe */\n  enableMouseSwipe: PropTypes.bool,\n\n  /** Prevent page scroll on touchmove.\n   * Use this to stop the browser from scrolling while a user swipes.\n   * More details: https://github.com/FormidableLabs/react-swipeable#preventdefaulttouchmoveevent-details\n   */\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n\n  // auto play\n  /** Enable or disable auto play */\n  enableAutoPlay: PropTypes.bool,\n\n  /** Set auto play speed (ms) */\n  autoPlaySpeed: PropTypes.number,\n\n  // callbacks\n  /** A callback for the change of an item\n   * - onChange(currentItemObject, currentPageIndex) => {} */\n  onChange: PropTypes.func,\n\n  /** A callback for the beginning of the next transition\n   * - onNextStart(prevItemObject, nextItemObject) => {} */\n  onNextStart: PropTypes.func,\n\n  /** A callback for the beginning of the prev transition\n   * - onPrevStart(prevItemObject, nextItemObject) => {} */\n  onPrevStart: PropTypes.func,\n\n  /** A callback for the end of the next transition\n   * - onNextEnd(nextItemObject, currentPageIndex) => {} */\n  onNextEnd: PropTypes.func,\n\n  /** A callback for the end of the prev transition\n   * - onPrevEnd(nextItemObject, currentPageIndex) => {} */\n  onPrevEnd: PropTypes.func,\n\n  /** A callback for the \"slider-container\" resize\n   * - onResize(currentBreakPoint) => {} */\n  onResize: PropTypes.func\n};\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"module"}